android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$1 -> android.support.v13.app.a:
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.b:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.c:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    java.lang.String getString(int) -> a
    boolean isAdded() -> d
    boolean isDetached() -> e
    boolean isVisible() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> h
    void onResume() -> i
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> j
    void onStop() -> k
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> l
    void onDestroy() -> m
    void initState() -> n
    void onDetach() -> o
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> p
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> q
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> r
    void performResume() -> s
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> t
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> u
    void performStop() -> v
    void performReallyStop() -> w
    void performDestroyView() -> x
    void performDestroy() -> y
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack() -> c
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    void popBackStack() -> c
    boolean popBackStackImmediate() -> d
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> e
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> u
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> f
    void reportBackStackChanged() -> g
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> h
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> i
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> j
    void dispatchCreate() -> k
    void dispatchActivityCreated() -> l
    void dispatchStart() -> m
    void dispatchResume() -> n
    void dispatchPause() -> o
    void dispatchStop() -> p
    void dispatchReallyStop() -> q
    void dispatchDestroyView() -> r
    void dispatchDestroy() -> s
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> t
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.s:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.v:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.x:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.y:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.z:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.aa:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ab:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ac:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ad:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ae:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ac:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ad:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ae:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.af:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ag:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ah:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ai:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.aj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ak:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.al:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.am:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.an:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ao:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ap:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ar:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    com.google.ads.internal.a a -> a
    java.lang.Object b -> b
    com.google.ads.AdActivity c -> c
    com.google.ads.internal.d d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.AdActivity f -> f
    com.google.ads.AdActivity$StaticMethodWrapper g -> g
    com.google.ads.internal.AdWebView h -> h
    android.widget.FrameLayout i -> i
    int j -> j
    android.view.ViewGroup k -> k
    boolean l -> l
    long m -> m
    android.widget.RelativeLayout n -> n
    com.google.ads.AdActivity o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    com.google.ads.internal.AdVideoView t -> t
    android.view.View a(int,boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> a
    boolean isShowing() -> b
    boolean leftApplication() -> c
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
    void a(java.util.HashMap,com.google.ads.internal.d) -> a
    void a(com.google.ads.internal.d) -> a
    com.google.ads.internal.AdVideoView a(android.app.Activity) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void e() -> h
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setCustomClose(boolean) -> a
    java.lang.Object a() -> d
    com.google.ads.AdActivity b() -> e
    com.google.ads.AdActivity c() -> f
    com.google.ads.internal.d d() -> g
    com.google.ads.internal.d b(com.google.ads.internal.d) -> b
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.b:
    boolean isShowing() -> a
    boolean leftApplication() -> b
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
com.google.ads.AdListener -> com.google.ads.c:
    void onReceiveAd(com.google.ads.Ad) -> a
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onDismissScreen(com.google.ads.Ad) -> c
    void onLeaveApplication(com.google.ads.Ad) -> d
com.google.ads.AdRequest -> com.google.ads.d:
    java.text.SimpleDateFormat a -> b
    java.lang.reflect.Method b -> c
    java.lang.reflect.Method c -> d
    com.google.ads.AdRequest$Gender d -> e
    java.util.Date e -> f
    java.util.Set f -> g
    java.util.Map g -> h
    java.util.Map h -> i
    android.location.Location i -> j
    boolean j -> k
    boolean k -> l
    java.lang.String TEST_EMULATOR -> a
    java.util.Set l -> m
    com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras) -> a
    java.lang.Object getNetworkExtras(java.lang.Class) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    boolean isTestDevice(android.content.Context) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.e:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.f:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.g:
    com.google.ads.AdSize SMART_BANNER -> a
    com.google.ads.AdSize BANNER -> b
    com.google.ads.AdSize IAB_MRECT -> c
    com.google.ads.AdSize IAB_BANNER -> d
    com.google.ads.AdSize IAB_LEADERBOARD -> e
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> f
    int a -> g
    int b -> h
    boolean c -> i
    boolean d -> j
    boolean e -> k
    java.lang.String f -> l
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    boolean a() -> f
    boolean isFullWidth() -> c
    boolean isAutoHeight() -> d
    boolean isCustomAdSize() -> e
    java.lang.String toString() -> toString
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
com.google.ads.AdView -> com.google.ads.h:
    com.google.ads.internal.d a -> a
    com.google.ads.internal.a b -> b
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    boolean isRefreshing() -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.google.ads.AppEventListener -> com.google.ads.i:
    void onAppEvent(com.google.ads.Ad,java.lang.String,java.lang.String) -> a
com.google.ads.InterstitialAd -> com.google.ads.j:
com.google.ads.SwipeableAdListener -> com.google.ads.k:
    void onAdActivated(com.google.ads.Ad) -> a
    void onAdDeactivated(com.google.ads.Ad) -> b
com.google.ads.a -> com.google.ads.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.aa -> com.google.ads.m:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.n:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.o:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ae -> com.google.ads.p:
    android.content.Context a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    void run() -> run
com.google.ads.af -> com.google.ads.q:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.ag -> com.google.ads.r:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
    int az -> az
    int aA -> aA
    int aB -> aB
    int aC -> aC
    int aD -> aD
    int aE -> aE
    int aF -> aF
    int aG -> aG
    int aH -> aH
    int aI -> aI
    int aJ -> aJ
    int aK -> aK
    int aL -> aL
    int aM -> aM
    int aN -> aN
    int aO -> aO
    int aP -> aP
    int aQ -> aQ
    int aR -> aR
    int aS -> aS
    int aT -> aT
    int aU -> aU
    int aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
    int ck -> ck
    int cl -> cl
    int cm -> cm
    int cn -> cn
    int co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    int cs -> cs
    int ct -> ct
    int cu -> cu
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    int cz -> cz
    int cA -> cA
    int cB -> cB
    int cC -> cC
    int cD -> cD
    int cE -> cE
    int cF -> cF
    int cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    com.google.ads.ag$a[] cN -> cN
    void a(byte[],byte[]) -> a
com.google.ads.ag$1 -> com.google.ads.s:
com.google.ads.ag$a -> com.google.ads.t:
    void a(byte[],byte[]) -> a
com.google.ads.ag$b -> com.google.ads.u:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$c -> com.google.ads.v:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$d -> com.google.ads.w:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$e -> com.google.ads.x:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$f -> com.google.ads.y:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$g -> com.google.ads.z:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$h -> com.google.ads.aa:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$i -> com.google.ads.ab:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$j -> com.google.ads.ac:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$k -> com.google.ads.ad:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$l -> com.google.ads.ae:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$m -> com.google.ads.af:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ah -> com.google.ads.ag:
    java.lang.String[] a -> a
com.google.ads.ai -> com.google.ads.ah:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
com.google.ads.aj -> com.google.ads.ai:
    com.google.ads.at c -> c
    java.io.ByteArrayOutputStream d -> d
    android.view.MotionEvent a -> a
    android.util.DisplayMetrics b -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    byte[] b() -> b
    java.lang.String a(byte[],java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
com.google.ads.ak -> com.google.ads.aj:
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.reflect.Method h -> h
    java.lang.String i -> i
    long j -> j
    boolean c -> c
    com.google.ads.ak a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String,android.content.Context) -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.Long b() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String c() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(byte[],java.lang.String) -> b
    void f(android.content.Context) -> f
com.google.ads.ak$a -> com.google.ads.ak:
com.google.ads.al -> com.google.ads.al:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] c -> c
    com.google.ads.ai d -> d
    com.google.ads.ah e -> e
    boolean a(android.net.Uri) -> a
    void a(java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,java.lang.String,java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.ads.am -> com.google.ads.am:
    void a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
com.google.ads.am$a -> com.google.ads.an:
com.google.ads.an -> com.google.ads.ao:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.google.ads.ao -> com.google.ads.ap:
com.google.ads.ap -> com.google.ads.aq:
    char[] a -> a
    char[] b -> b
    byte[] c -> c
    byte[] d -> d
    char[] a(byte[],int,int,char[],int,char[]) -> a
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],int,int,char[],boolean) -> a
    char[] a(byte[],int,int,char[],int) -> a
    int a(char[],int,byte[],int,byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(char[],int,int) -> a
    byte[] a(char[],int,int,byte[]) -> a
com.google.ads.aq -> com.google.ads.ar:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
com.google.ads.ar -> com.google.ads.as:
    android.net.Uri a -> a
    java.lang.String[] b -> b
com.google.ads.as -> com.google.ads.at:
    com.google.ads.internal.a a -> a
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,long,android.content.SharedPreferences) -> a
    void a(android.app.Activity) -> a
com.google.ads.as$1 -> com.google.ads.au:
    android.content.Context a -> a
    void run() -> run
com.google.ads.as$a -> com.google.ads.av:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    android.content.SharedPreferences$Editor a(android.content.Context) -> a
    void run() -> run
com.google.ads.at -> com.google.ads.aw:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.OutputStream e -> e
    com.google.ads.at a(java.io.OutputStream) -> a
    com.google.ads.at a(java.io.OutputStream,int) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a(long) -> a
    void a(java.lang.String) -> a
    void b() -> b
    void a() -> a
    void a(byte) -> a
    void a(int) -> a
    void a(byte[]) -> a
    void a(byte[],int,int) -> a
    void a(int,int) -> a
    void b(int) -> b
    void b(long) -> b
com.google.ads.at$a -> com.google.ads.ax:
com.google.ads.au -> com.google.ads.ay:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int,int) -> a
com.google.ads.b -> com.google.ads.az:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
    byte[] a(long) -> a
com.google.ads.c -> com.google.ads.ba:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.a a(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> com.google.ads.bb:
com.google.ads.d -> com.google.ads.bc:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.a.a:
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
com.google.ads.doubleclick.DfpExtras -> com.google.ads.a.b:
    java.lang.String a -> a
    java.lang.String getPublisherProvidedId() -> a
    com.google.ads.doubleclick.DfpExtras clearExtras() -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
com.google.ads.doubleclick.SwipeableDfpAdView -> com.google.ads.a.c:
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
com.google.ads.e -> com.google.ads.bd:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean a(com.google.ads.c,com.google.ads.internal.d) -> a
    boolean d() -> b
    void b(com.google.ads.c,com.google.ads.AdRequest) -> b
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> b
    void d(com.google.ads.h) -> a
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a(com.google.ads.e,java.lang.Thread) -> a
    com.google.ads.internal.d b(com.google.ads.e) -> b
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> com.google.ads.be:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$7 -> com.google.ads.bf:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> com.google.ads.bg:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.bh:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
com.google.ads.g -> com.google.ads.bi:
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
com.google.ads.g$a -> com.google.ads.bj:
    com.google.ads.g$a a -> a
    com.google.ads.g$a b -> b
    com.google.ads.g$a c -> c
    com.google.ads.g$a d -> d
    com.google.ads.g$a e -> e
    com.google.ads.g$a f -> f
    com.google.ads.g$a[] g -> g
    com.google.ads.g$a[] values() -> values
    com.google.ads.g$a valueOf(java.lang.String) -> valueOf
com.google.ads.h -> com.google.ads.bk:
    com.google.ads.internal.h a -> a
    com.google.ads.f b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.g$a e -> e
    com.google.ads.e f -> f
    com.google.ads.mediation.MediationAdapter g -> g
    boolean h -> h
    boolean i -> i
    android.view.View j -> j
    java.lang.String k -> k
    com.google.ads.AdRequest l -> l
    java.util.HashMap m -> m
    void a(android.app.Activity) -> a
    void b() -> a
    boolean c() -> b
    boolean d() -> c
    com.google.ads.g$a e() -> d
    android.view.View f() -> e
    java.lang.String h() -> f
    void a(boolean,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    void k() -> g
    boolean l() -> h
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> com.google.ads.bl:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.i -> com.google.ads.bm:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    boolean a(java.util.Map) -> a
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
com.google.ads.i$a -> com.google.ads.bn:
com.google.ads.internal.ActivationOverlay -> com.google.ads.b.a:
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.google.ads.internal.i f -> f
    void setOverlayEnabled(boolean) -> setOverlayEnabled
    void setOverlayActivated(boolean) -> setOverlayActivated
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    void setYPosition(int) -> setYPosition
    int d() -> d
    void setXPosition(int) -> setXPosition
    com.google.ads.internal.i e() -> e
com.google.ads.internal.ActivationOverlay$1 -> com.google.ads.b.b:
    com.google.ads.internal.ActivationOverlay a -> a
    com.google.ads.internal.ActivationOverlay b -> b
    void run() -> run
com.google.ads.internal.AdVideoView -> com.google.ads.b.c:
    com.google.ads.internal.a b -> b
    java.lang.ref.WeakReference c -> c
    com.google.ads.internal.AdWebView d -> d
    android.widget.MediaController a -> a
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void a() -> a
    void b() -> b
    void setMediaControllerEnabled(boolean) -> setMediaControllerEnabled
    void setSrc(java.lang.String) -> setSrc
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> c
    void d() -> d
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> e
    void f() -> f
com.google.ads.internal.AdVideoView$a -> com.google.ads.b.d:
    java.lang.ref.WeakReference a -> a
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.b.e:
    java.lang.ref.WeakReference b -> b
    com.google.ads.AdSize c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.google.ads.n a -> a
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.AdActivity i() -> i
    boolean j() -> j
    boolean k() -> k
    void setAdActivity(com.google.ads.AdActivity) -> setAdActivity
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> setAdSize
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCustomClose(boolean) -> setCustomClose
    void setIsExpandedMraid(boolean) -> setIsExpandedMraid
    void a(boolean) -> a
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.internal.AdWebView$1 -> com.google.ads.b.f:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.AdWebView$2 -> com.google.ads.b.g:
    com.google.ads.internal.AdWebView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.ads.internal.a -> com.google.ads.b.h:
    com.google.ads.internal.a e -> e
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    java.lang.String a(android.net.Uri,java.util.HashMap) -> a
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> com.google.ads.b.i:
com.google.ads.internal.a$2 -> com.google.ads.b.j:
    com.google.ads.internal.a a() -> a
    java.lang.Object b() -> b
com.google.ads.internal.a$3 -> com.google.ads.b.k:
com.google.ads.internal.a$4 -> com.google.ads.b.l:
com.google.ads.internal.b -> com.google.ads.b.m:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String c(java.lang.String) -> b
com.google.ads.internal.c -> com.google.ads.b.n:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    com.google.ads.internal.f g -> g
    com.google.ads.AdRequest h -> h
    android.webkit.WebView i -> i
    com.google.ads.l j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.LinkedList m -> m
    java.lang.String n -> n
    com.google.ads.AdSize o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    com.google.ads.AdRequest$ErrorCode s -> s
    boolean t -> t
    int u -> u
    java.lang.Thread v -> v
    boolean w -> w
    com.google.ads.internal.c$d x -> x
    boolean a -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    void b() -> a
    void a(java.lang.String,com.google.ads.c,com.google.ads.d) -> a
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String d() -> c
    java.lang.String e() -> d
    java.lang.String f() -> e
    java.lang.String g() -> f
    java.lang.String h() -> g
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(java.lang.String,java.lang.String) -> b
    void i() -> h
    void j() -> i
    void b(boolean) -> b
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> b
    void c(boolean) -> c
    void a(int) -> a
    void d(boolean) -> d
    void a(com.google.ads.internal.c$d) -> a
    void e(boolean) -> e
    boolean a(com.google.ads.internal.c) -> a
    com.google.ads.l b(com.google.ads.internal.c) -> b
    java.lang.String c(com.google.ads.internal.c) -> c
    android.webkit.WebView d(com.google.ads.internal.c) -> d
    java.lang.String e(com.google.ads.internal.c) -> e
    com.google.ads.AdSize f(com.google.ads.internal.c) -> f
com.google.ads.internal.c$1 -> com.google.ads.b.o:
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$2 -> com.google.ads.b.p:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$3 -> com.google.ads.b.q:
    int[] a -> a
com.google.ads.internal.c$a -> com.google.ads.b.r:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> com.google.ads.b.s:
    com.google.ads.internal.c a -> a
com.google.ads.internal.c$c -> com.google.ads.b.t:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.b.u:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> values
    com.google.ads.internal.c$d valueOf(java.lang.String) -> valueOf
com.google.ads.internal.c$e -> com.google.ads.b.v:
    com.google.ads.internal.d b -> b
    android.webkit.WebView c -> c
    java.util.LinkedList d -> d
    int e -> e
    boolean f -> f
    java.lang.String g -> g
    com.google.ads.AdSize h -> h
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.d -> com.google.ads.b.w:
    java.lang.Object a -> a
    com.google.ads.n b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.SharedPreferences o -> o
    long p -> p
    com.google.ads.af q -> q
    boolean r -> r
    java.util.LinkedList s -> s
    java.util.LinkedList t -> t
    int u -> u
    java.lang.Boolean v -> v
    com.google.ads.d w -> w
    com.google.ads.e x -> x
    com.google.ads.f y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    void h() -> g
    com.google.ads.n i() -> h
    com.google.ads.d j() -> i
    com.google.ads.internal.c k() -> j
    com.google.ads.internal.AdWebView l() -> k
    com.google.ads.internal.i m() -> l
    com.google.ads.internal.g n() -> m
    void a(int) -> a
    int o() -> n
    long p() -> o
    boolean q() -> p
    boolean r() -> q
    boolean t() -> r
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean) -> a
    void b(com.google.ads.c) -> b
    void u() -> s
    void v() -> t
    void w() -> u
    void a(java.lang.String,java.lang.String) -> a
    void x() -> v
    void a(com.google.ads.f,java.lang.Boolean) -> a
    void a(java.util.List,java.lang.String) -> a
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void y() -> w
    void z() -> x
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void C() -> y
    void D() -> z
    void b(java.lang.String) -> b
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
    void a(com.google.ads.l,boolean,int,int,int,int) -> a
    void a(int,int,int,int) -> a
com.google.ads.internal.e -> com.google.ads.b.x:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.util.HashMap a(java.io.Serializable) -> a
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.b.y:
    com.google.ads.l a -> a
    com.google.ads.internal.f$a b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.Thread f -> f
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void c(java.net.HttpURLConnection) -> c
    void d(java.net.HttpURLConnection) -> d
    void e(java.net.HttpURLConnection) -> e
    void f(java.net.HttpURLConnection) -> f
    void g(java.net.HttpURLConnection) -> g
    void h(java.net.HttpURLConnection) -> h
    void i(java.net.HttpURLConnection) -> i
    void j(java.net.HttpURLConnection) -> j
    void a(boolean) -> a
    void k(java.net.HttpURLConnection) -> k
    void l(java.net.HttpURLConnection) -> l
    void m(java.net.HttpURLConnection) -> m
    void a(java.lang.String) -> a
    void a(java.net.HttpURLConnection,int) -> a
    void run() -> run
    void b() -> b
    void a(android.content.Context,java.net.HttpURLConnection) -> a
com.google.ads.internal.f$1 -> com.google.ads.b.z:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.f$a -> com.google.ads.b.aa:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.b.ab:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.b.ac:
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    boolean b() -> b
    com.google.ads.AdSize c() -> c
    void b(com.google.ads.AdSize) -> b
    void a(boolean) -> a
com.google.ads.internal.i -> com.google.ads.b.ad:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    boolean a() -> a
com.google.ads.internal.j -> com.google.ads.b.ae:
    java.lang.String a -> a
    android.content.Context b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.io.BufferedOutputStream a(java.net.HttpURLConnection) -> a
    void run() -> run
com.google.ads.internal.j$a -> com.google.ads.b.af:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.google.ads.internal.k -> com.google.ads.b.ag:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.k$a -> com.google.ads.b.ah:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    com.google.ads.internal.d a(com.google.ads.internal.k$a) -> a
    android.app.Activity b(com.google.ads.internal.k$a) -> b
com.google.ads.internal.k$a$1 -> com.google.ads.b.ai:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$2 -> com.google.ads.b.aj:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$3 -> com.google.ads.b.ak:
    java.lang.String a -> a
    com.google.ads.internal.k$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> com.google.ads.bo:
    com.google.ads.h a -> a
com.google.ads.k -> com.google.ads.bp:
    com.google.ads.h a -> a
com.google.ads.l -> com.google.ads.bq:
    com.google.ads.util.j$b a -> a
    com.google.ads.util.j$c b -> b
    com.google.ads.util.j$c c -> c
com.google.ads.m -> com.google.ads.br:
    com.google.ads.m c -> c
    com.google.ads.util.j$b a -> a
    com.google.ads.util.j$b b -> b
    com.google.ads.m a() -> a
com.google.ads.m$a -> com.google.ads.bs:
    com.google.ads.util.j$c a -> a
    com.google.ads.util.j$c b -> b
    com.google.ads.util.j$c c -> c
    com.google.ads.util.j$c d -> d
    com.google.ads.util.j$c e -> e
    com.google.ads.util.j$c f -> f
    com.google.ads.util.j$c g -> g
    com.google.ads.util.j$c h -> h
    com.google.ads.util.j$c i -> i
    com.google.ads.util.j$c j -> j
    com.google.ads.util.j$c k -> k
    com.google.ads.util.j$c l -> l
    com.google.ads.util.j$c m -> m
    com.google.ads.util.j$c n -> n
    com.google.ads.util.j$c o -> o
com.google.ads.mediation.MediationAdRequest -> com.google.ads.c.a:
    com.google.ads.AdRequest a -> a
    boolean b -> b
    boolean c -> c
com.google.ads.mediation.MediationAdapter -> com.google.ads.c.b:
    void destroy() -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.c.c:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
com.google.ads.mediation.MediationBannerListener -> com.google.ads.c.d:
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.c.e:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
com.google.ads.mediation.MediationInterstitialListener -> com.google.ads.c.f:
com.google.ads.mediation.MediationServerParameters -> com.google.ads.c.g:
    void load(java.util.Map) -> a
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.c.h:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.c.i:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.NetworkExtras -> com.google.ads.c.j:
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.c.a.a:
    boolean a -> a
    boolean b -> b
    java.util.Map c -> c
    boolean getPlusOneOptOut() -> d
    java.util.Map getExtras() -> e
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
com.google.ads.n -> com.google.ads.bt:
    com.google.ads.util.j$b a -> a
    com.google.ads.util.j$b b -> b
    com.google.ads.util.j$d c -> c
    com.google.ads.util.j$b d -> d
    com.google.ads.util.j$b e -> e
    com.google.ads.util.j$b f -> f
    com.google.ads.util.j$b g -> g
    com.google.ads.util.j$b h -> h
    com.google.ads.util.j$b i -> i
    com.google.ads.util.j$b j -> j
    com.google.ads.util.j$b k -> k
    com.google.ads.util.j$b l -> l
    com.google.ads.util.j$b m -> m
    com.google.ads.util.j$c n -> n
    com.google.ads.util.j$c o -> o
    com.google.ads.util.j$c p -> p
    com.google.ads.util.j$c q -> q
    com.google.ads.util.j$c r -> r
    com.google.ads.util.j$c s -> s
    boolean a() -> a
    boolean b() -> b
com.google.ads.o -> com.google.ads.bu:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.bv:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.bw:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.bx:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.by:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.d.a:
    java.lang.String a -> b
    int b -> c
    int c -> d
    int d -> e
    int e -> f
    int f -> g
    int g -> h
    java.lang.String h -> i
    int i -> j
    int j -> k
    com.google.ads.searchads.SearchAdRequest$BorderType k -> l
    int l -> m
    java.lang.String m -> n
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.d.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.bz:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.ca:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.e.a:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(com.google.ads.util.d) -> a
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.util.HashMap a(android.location.Location) -> a
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
    int a(android.content.Context,int) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.e.b:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.e.c:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.a -> com.google.ads.e.d:
    boolean a -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> a
    void b(boolean,java.lang.String) -> b
    void b(java.lang.Object) -> a
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.e.e:
com.google.ads.util.b -> com.google.ads.e.f:
    com.google.ads.util.b$b a -> a
    int b -> b
    void a(com.google.ads.util.b$a,java.lang.String) -> a
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
    boolean a(int) -> a
com.google.ads.util.b$a -> com.google.ads.e.g:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
    int f -> f
    com.google.ads.util.b$a[] g -> g
    com.google.ads.util.b$a[] values() -> values
    com.google.ads.util.b$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.b$b -> com.google.ads.e.h:
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
com.google.ads.util.c -> com.google.ads.e.i:
    boolean a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
com.google.ads.util.c$a -> com.google.ads.e.j:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.e.k:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.d -> com.google.ads.e.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.ads.util.d d -> d
    com.google.ads.util.d e -> e
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.e -> com.google.ads.e.m:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
    void a(android.content.Intent,java.lang.String) -> a
com.google.ads.util.f -> com.google.ads.e.n:
    java.lang.Object b() -> b
com.google.ads.util.g -> com.google.ads.e.o:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a(android.view.Window) -> a
com.google.ads.util.g$1 -> com.google.ads.e.p:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.e.q:
    com.google.ads.n a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
    void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult) -> a
    void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
com.google.ads.util.g$a$1 -> com.google.ads.e.r:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> com.google.ads.e.s:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> com.google.ads.e.t:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> com.google.ads.e.u:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> com.google.ads.e.v:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> com.google.ads.e.w:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.e.x:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.h -> com.google.ads.e.y:
    boolean a(int,com.google.ads.n,com.google.ads.internal.AdWebView) -> a
    boolean b(int,com.google.ads.n,com.google.ads.internal.AdWebView) -> b
com.google.ads.util.h$a -> com.google.ads.e.z:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.i -> com.google.ads.e.aa:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
com.google.ads.util.j -> com.google.ads.e.ab:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int t -> t
    java.util.ArrayList d -> d
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.j$a) -> a
    void a(com.google.ads.util.j,com.google.ads.util.j$a) -> a
com.google.ads.util.j$1 -> com.google.ads.e.ac:
com.google.ads.util.j$a -> com.google.ads.e.ad:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.j c -> c
    java.lang.String toString() -> toString
com.google.ads.util.j$b -> com.google.ads.e.ae:
    com.google.ads.util.j d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.j$c -> com.google.ads.e.af:
    boolean e -> e
    com.google.ads.util.j d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.j$d -> com.google.ads.e.ag:
    com.google.ads.util.j d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.cb:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.cc:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.cd:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.j$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.j$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.j$c) -> c
com.google.ads.y -> com.google.ads.ce:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.cf:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.analytics.tracking.android.AdHitIdGenerator -> com.google.a.a.a.a:
    boolean mAdMobSdkInstalled -> a
    int getAdHitId() -> a
com.google.analytics.tracking.android.AdMobInfo -> com.google.a.a.a.b:
    com.google.analytics.tracking.android.AdMobInfo INSTANCE -> a
    int mAdHitId -> b
    java.util.Random mRandom -> c
    com.google.analytics.tracking.android.AdMobInfo getInstance() -> a
    int generateAdHitId() -> b
com.google.analytics.tracking.android.AnalyticsClient -> com.google.a.a.a.c:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    void connect() -> b
    void disconnect() -> c
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> com.google.a.a.a.d:
    android.content.ServiceConnection mConnection -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener mOnConnectedListener -> b
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener mOnConnectionFailedListener -> c
    android.content.Context mContext -> d
    com.google.android.gms.analytics.internal.IAnalyticsService mService -> e
    void connect() -> b
    void disconnect() -> c
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    com.google.android.gms.analytics.internal.IAnalyticsService getService() -> f
    void checkConnected() -> d
    boolean isConnected() -> e
    void onServiceBound() -> g
    void onConnectionSuccess() -> h
    com.google.android.gms.analytics.internal.IAnalyticsService access$002(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,com.google.android.gms.analytics.internal.IAnalyticsService) -> a
    void access$100(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> a
    android.content.Context access$200(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> b
    android.content.ServiceConnection access$302(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,android.content.ServiceConnection) -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener access$400(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> c
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener access$500(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> d
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> com.google.a.a.a.e:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> com.google.a.a.a.f:
    void onConnected() -> a
    void onDisconnected() -> b
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> com.google.a.a.a.g:
    void onConnectionFailed(int,android.content.Intent) -> a
com.google.analytics.tracking.android.AnalyticsStore -> com.google.a.a.a.h:
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void clearHits(long) -> a
    void dispatch() -> a
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> com.google.a.a.a.i:
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.AnalyticsThread -> com.google.a.a.a.j:
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void requestAppOptOut(com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback -> com.google.a.a.a.k:
    void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.Clock -> com.google.a.a.a.l:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.Dispatcher -> com.google.a.a.a.m:
    int dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
com.google.analytics.tracking.android.EasyTracker -> com.google.a.a.a.n:
    com.google.analytics.tracking.android.EasyTracker sInstance -> a
    boolean mIsEnabled -> b
    java.lang.String mTrackingId -> c
    java.lang.String mAppName -> d
    java.lang.String mAppVersion -> e
    int mDispatchPeriod -> f
    boolean mDebug -> g
    java.lang.Double mSampleRate -> h
    boolean mIsAnonymizeIpEnabled -> i
    boolean mIsReportUncaughtExceptionsEnabled -> j
    java.lang.Thread$UncaughtExceptionHandler mExceptionHandler -> k
    boolean mIsAutoActivityTracking -> l
    int mActivitiesActive -> m
    long mSessionTimeout -> n
    long mLastOnStopTime -> o
    android.content.Context mContext -> p
    java.util.Map mActivityNameMap -> q
    com.google.analytics.tracking.android.Tracker mTracker -> r
    com.google.analytics.tracking.android.ParameterLoader mParameterFetcher -> s
    com.google.analytics.tracking.android.GoogleAnalytics mAnalyticsInstance -> t
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> u
    com.google.analytics.tracking.android.Clock mClock -> v
    java.util.Timer mTimer -> w
    java.util.TimerTask mTimerTask -> x
    boolean mIsInForeground -> y
    com.google.analytics.tracking.android.EasyTracker getInstance() -> a
    com.google.analytics.tracking.android.Tracker getTracker() -> b
    boolean checkForNewSession() -> c
    void loadParameters() -> d
    void setContext(android.content.Context) -> a
    void setContext(android.content.Context,com.google.analytics.tracking.android.ParameterLoader,com.google.analytics.tracking.android.GoogleAnalytics,com.google.analytics.tracking.android.ServiceManager) -> a
    void activityStart(android.app.Activity) -> a
    void activityStop(android.app.Activity) -> b
    void clearExistingTimer() -> e
    java.lang.String getActivityName(android.app.Activity) -> c
    boolean access$102(com.google.analytics.tracking.android.EasyTracker,boolean) -> a
com.google.analytics.tracking.android.EasyTracker$1 -> com.google.a.a.a.o:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.EasyTracker$NoopTracker -> com.google.a.a.a.p:
    double mSampleRate -> b
    boolean mIsAnonymizeIp -> c
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    void setStartSession(boolean) -> a
    void setAppName(java.lang.String) -> a
    void setAppVersion(java.lang.String) -> b
    void sendView(java.lang.String) -> c
    void sendEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> a
    void sendException(java.lang.String,boolean) -> a
    void setAnonymizeIp(boolean) -> b
    void setSampleRate(double) -> a
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> b
    java.util.Map constructException(java.lang.String,boolean) -> b
com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask -> com.google.a.a.a.q:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.ExceptionParser -> com.google.a.a.a.r:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.ExceptionReporter -> com.google.a.a.a.s:
    java.lang.Thread$UncaughtExceptionHandler mOriginalHandler -> a
    com.google.analytics.tracking.android.Tracker mTracker -> b
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> c
    com.google.analytics.tracking.android.ExceptionParser mExceptionParser -> d
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.analytics.tracking.android.FutureApis -> com.google.a.a.a.t:
    int version() -> a
    boolean setOwnerOnlyReadWrite(java.lang.String) -> a
com.google.analytics.tracking.android.GANetworkReceiver -> com.google.a.a.a.u:
    com.google.analytics.tracking.android.ServiceManager mManager -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.GAServiceManager -> com.google.a.a.a.v:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.analytics.tracking.android.AnalyticsStore store -> c
    com.google.analytics.tracking.android.AnalyticsThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    boolean connected -> g
    boolean listenForNetwork -> h
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> i
    android.os.Handler handler -> j
    com.google.analytics.tracking.android.GANetworkReceiver networkReceiver -> k
    boolean storeIsEmpty -> l
    com.google.analytics.tracking.android.GAServiceManager instance -> m
    com.google.analytics.tracking.android.GAServiceManager getInstance() -> a
    void initializeNetworkReceiver() -> e
    void initializeHandler() -> f
    void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> a
    com.google.analytics.tracking.android.AnalyticsStore getStore() -> b
    void dispatch() -> c
    void setDispatchPeriod(int) -> a
    void updatePowerSaveMode(boolean,boolean) -> a
    void updateConnectivityStatus(boolean) -> a
    boolean access$000(com.google.analytics.tracking.android.GAServiceManager) -> a
    java.lang.Object access$100() -> d
    int access$200(com.google.analytics.tracking.android.GAServiceManager) -> b
    boolean access$300(com.google.analytics.tracking.android.GAServiceManager) -> c
    android.os.Handler access$400(com.google.analytics.tracking.android.GAServiceManager) -> d
com.google.analytics.tracking.android.GAServiceManager$1 -> com.google.a.a.a.w:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.GAServiceManager$2 -> com.google.a.a.a.x:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> com.google.a.a.a.y:
    long lastRequestTime -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> b
    com.google.analytics.tracking.android.AnalyticsClient client -> c
    com.google.analytics.tracking.android.AnalyticsStore store -> d
    com.google.analytics.tracking.android.AnalyticsStore testStore -> e
    com.google.analytics.tracking.android.AnalyticsThread thread -> f
    android.content.Context ctx -> g
    java.util.Queue queue -> h
    int connectTries -> i
    java.util.Timer reConnectTimer -> j
    java.util.Timer failedConnectTimer -> k
    java.util.Timer disconnectCheckTimer -> l
    boolean pendingDispatch -> m
    boolean pendingClearHits -> n
    com.google.analytics.tracking.android.Clock clock -> o
    long idleTimeout -> p
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    void clearHits() -> d
    java.util.Timer cancelTimer(java.util.Timer) -> a
    void clearAllTimers() -> f
    void createService() -> e
    void sendQueue() -> g
    void dispatchToStore() -> h
    void useStore() -> i
    void connectToService() -> j
    void disconnectFromService() -> k
    void onConnected() -> a
    void onDisconnected() -> b
    void onConnectionFailed(int,android.content.Intent) -> a
    void fireReconnectAttempt() -> l
    void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> b
    void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> c
    void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> d
    java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> e
    long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> f
    long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> g
    com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> h
    void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> i
    java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> j
com.google.analytics.tracking.android.GAServiceProxy$1 -> com.google.a.a.a.z:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.GAServiceProxy$2 -> com.google.a.a.a.aa:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> com.google.a.a.a.ab:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> a
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> com.google.a.a.a.ac:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> b
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> c
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> d
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> e
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> f
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> g
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> h
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> values
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> com.google.a.a.a.ad:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> com.google.a.a.a.ae:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> com.google.a.a.a.af:
    java.util.Map wireFormatParams -> a
    long hitTimeInMilliseconds -> b
    java.lang.String path -> c
    java.util.List commands -> d
    java.util.Map getWireFormatParams() -> a
    long getHitTimeInMilliseconds() -> b
    java.lang.String getPath() -> c
    java.util.List getCommands() -> d
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> com.google.a.a.a.ag:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread -> com.google.a.a.a.ah:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean mDisabled -> b
    boolean mClosed -> c
    boolean mAppOptOut -> d
    java.util.List mCommands -> e
    com.google.analytics.tracking.android.MetaModel mMetaModel -> f
    java.lang.String mInstallCampaign -> g
    java.lang.String mClientId -> h
    com.google.analytics.tracking.android.GAThread sInstance -> i
    com.google.analytics.tracking.android.ServiceProxy mServiceProxy -> j
    android.content.Context mContext -> k
    com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> a
    void init() -> e
    void sendHit(java.util.Map) -> a
    java.lang.String getHostUrl(java.util.Map) -> b
    void fillExceptionParameters(java.util.Map) -> c
    boolean isSampledOut(java.util.Map) -> d
    void fillAppParameters(java.util.Map) -> e
    void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> a
    void fillCampaignParameters(java.util.Map) -> f
    void dispatch() -> a
    void requestAppOptOut(com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    void queueToThread(java.lang.Runnable) -> a
    boolean loadAppOptOut() -> f
    boolean storeClientId(java.lang.String) -> a
    java.lang.String generateClientId() -> g
    java.lang.String initializeClientId() -> d
    java.lang.String getAndClearCampaign(android.content.Context) -> b
    java.lang.String printStackTrace(java.lang.Throwable) -> a
    void run() -> run
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
    java.lang.String access$000(com.google.analytics.tracking.android.GAThread) -> a
    boolean access$100(com.google.analytics.tracking.android.GAThread) -> b
    boolean access$200(com.google.analytics.tracking.android.GAThread,java.util.Map) -> a
    java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> c
    java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> a
    void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> b
    void access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> c
    void access$600(com.google.analytics.tracking.android.GAThread,java.util.Map) -> d
    com.google.analytics.tracking.android.MetaModel access$700(com.google.analytics.tracking.android.GAThread) -> d
    java.lang.String access$800(com.google.analytics.tracking.android.GAThread,java.util.Map) -> e
    java.util.List access$900(com.google.analytics.tracking.android.GAThread) -> e
    com.google.analytics.tracking.android.ServiceProxy access$1000(com.google.analytics.tracking.android.GAThread) -> f
com.google.analytics.tracking.android.GAThread$1 -> com.google.a.a.a.ai:
    java.util.Map val$hitCopy -> a
    long val$hitTime -> b
    com.google.analytics.tracking.android.GAThread this$0 -> c
    void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> com.google.a.a.a.aj:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> com.google.a.a.a.ak:
    com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAThread$5 -> com.google.a.a.a.al:
    com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAUsage -> com.google.a.a.a.am:
    java.util.SortedSet mUsedFields -> a
    java.lang.StringBuilder mSequence -> b
    boolean mDisableUsage -> c
    com.google.analytics.tracking.android.GAUsage INSTANCE -> d
    com.google.analytics.tracking.android.GAUsage getInstance() -> a
    void setDisableUsage(boolean) -> a
    void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> a
    java.lang.String getAndClearUsage() -> b
    java.lang.String getAndClearSequence() -> c
com.google.analytics.tracking.android.GAUsage$Field -> com.google.a.a.a.an:
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW -> a
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW_WITH_APPSCREEN -> b
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EVENT -> c
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TRANSACTION -> d
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_DESCRIPTION -> e
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_THROWABLE -> f
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> g
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TIMING -> h
    com.google.analytics.tracking.android.GAUsage$Field TRACK_SOCIAL -> i
    com.google.analytics.tracking.android.GAUsage$Field GET -> j
    com.google.analytics.tracking.android.GAUsage$Field SET -> k
    com.google.analytics.tracking.android.GAUsage$Field SEND -> l
    com.google.analytics.tracking.android.GAUsage$Field SET_START_SESSION -> m
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> n
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_NAME -> o
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> p
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_VERSION -> q
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> r
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_SCREEN -> s
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKING_ID -> t
    com.google.analytics.tracking.android.GAUsage$Field SET_ANONYMIZE_IP -> u
    com.google.analytics.tracking.android.GAUsage$Field GET_ANONYMIZE_IP -> v
    com.google.analytics.tracking.android.GAUsage$Field SET_SAMPLE_RATE -> w
    com.google.analytics.tracking.android.GAUsage$Field GET_SAMPLE_RATE -> x
    com.google.analytics.tracking.android.GAUsage$Field SET_USE_SECURE -> y
    com.google.analytics.tracking.android.GAUsage$Field GET_USE_SECURE -> z
    com.google.analytics.tracking.android.GAUsage$Field SET_REFERRER -> A
    com.google.analytics.tracking.android.GAUsage$Field SET_CAMPAIGN -> B
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_ID -> C
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_ID -> D
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> E
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> F
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> G
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> H
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> I
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> J
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> K
    com.google.analytics.tracking.android.GAUsage$Field SET_DEBUG -> L
    com.google.analytics.tracking.android.GAUsage$Field GET_DEBUG -> M
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> N
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> O
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> P
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> Q
    com.google.analytics.tracking.android.GAUsage$Field REQUEST_APP_OPT_OUT -> R
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> S
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> T
    com.google.analytics.tracking.android.GAUsage$Field BLANK_48 -> U
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> V
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> W
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> X
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> Y
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> Z
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_INSTALLER_ID -> aa
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_INSTALLER_ID -> ab
    com.google.analytics.tracking.android.GAUsage$Field[] $VALUES -> ac
    com.google.analytics.tracking.android.GAUsage$Field[] values() -> values
    com.google.analytics.tracking.android.GAUsage$Field valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GoogleAnalytics -> com.google.a.a.a.ao:
    boolean mDebug -> a
    com.google.analytics.tracking.android.AnalyticsThread mThread -> b
    android.content.Context mContext -> c
    com.google.analytics.tracking.android.Tracker mDefaultTracker -> d
    com.google.analytics.tracking.android.AdHitIdGenerator mAdHitIdGenerator -> e
    java.lang.String mClientId -> f
    java.lang.Boolean mAppOptOut -> g
    java.util.Map mTrackers -> h
    java.lang.String mLastTrackingId -> i
    com.google.analytics.tracking.android.GoogleAnalytics sInstance -> j
    com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> a
    void setDebug(boolean) -> a
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> a
    void sendHit(java.util.Map) -> a
    java.lang.Boolean access$002(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.Boolean) -> a
    java.lang.String access$102(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.String) -> a
com.google.analytics.tracking.android.GoogleAnalytics$1 -> com.google.a.a.a.ap:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.GoogleAnalytics$2 -> com.google.a.a.a.aq:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback -> com.google.a.a.a.ar:
    void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.Hit -> com.google.a.a.a.as:
    java.lang.String mHitString -> a
    long mHitId -> b
    long mHitTime -> c
    java.lang.String mHitUrl -> d
    java.lang.String getHitParams() -> a
    void setHitString(java.lang.String) -> a
    long getHitId() -> b
    long getHitTime() -> c
    java.lang.String getHitUrl() -> d
    void setHitUrl(java.lang.String) -> b
com.google.analytics.tracking.android.HitBuilder -> com.google.a.a.a.at:
    java.util.Map generateHitParams(com.google.analytics.tracking.android.MetaModel,java.util.Map) -> a
    java.lang.String postProcessHit(com.google.analytics.tracking.android.Hit,long) -> a
    java.lang.String encode(java.lang.String) -> a
com.google.analytics.tracking.android.HttpClientFactory -> com.google.a.a.a.au:
    org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.Log -> com.google.a.a.a.av:
    boolean sDebug -> a
    void setDebug(boolean) -> a
    boolean isDebugEnabled() -> a
    int d(java.lang.String) -> a
    int dDebug(java.lang.String) -> b
    int e(java.lang.String) -> c
    int i(java.lang.String) -> d
    int iDebug(java.lang.String) -> e
    int v(java.lang.String) -> f
    int vDebug(java.lang.String) -> g
    int w(java.lang.String) -> h
    int wDebug(java.lang.String) -> i
    java.lang.String formatMessage(java.lang.String) -> j
com.google.analytics.tracking.android.MetaModel -> com.google.a.a.a.aw:
    java.util.Map mMetaInfos -> a
    com.google.analytics.tracking.android.MetaModel$MetaInfo getMetaInfo(java.lang.String) -> a
    void addField(java.lang.String,java.lang.String,java.lang.String,com.google.analytics.tracking.android.MetaModel$Formatter) -> a
com.google.analytics.tracking.android.MetaModel$Formatter -> com.google.a.a.a.ax:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModel$MetaInfo -> com.google.a.a.a.ay:
    java.lang.String mUrlParam -> a
    java.lang.String mDefaultValue -> b
    com.google.analytics.tracking.android.MetaModel$Formatter mFormatter -> c
    java.lang.String getUrlParam(java.lang.String) -> a
    java.lang.String getDefaultValue() -> a
    com.google.analytics.tracking.android.MetaModel$Formatter getFormatter() -> b
com.google.analytics.tracking.android.MetaModelInitializer -> com.google.a.a.a.az:
    com.google.analytics.tracking.android.MetaModel$Formatter BOOLEAN_FORMATTER -> a
    com.google.analytics.tracking.android.MetaModel$Formatter UP_TO_TWO_DIGIT_FLOAT_FORMATTER -> b
    void set(com.google.analytics.tracking.android.MetaModel) -> a
com.google.analytics.tracking.android.MetaModelInitializer$1 -> com.google.a.a.a.ba:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModelInitializer$2 -> com.google.a.a.a.bb:
    java.text.DecimalFormat mFloatFormat -> a
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.ParameterLoader -> com.google.a.a.a.bc:
    java.lang.String getString(java.lang.String) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
com.google.analytics.tracking.android.ParameterLoaderImpl -> com.google.a.a.a.bd:
    android.content.Context mContext -> a
    int getResourceIdForType(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
com.google.analytics.tracking.android.PersistentAnalyticsStore -> com.google.a.a.a.be:
    java.lang.String CREATE_HITS_TABLE -> a
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper mDbHelper -> b
    com.google.analytics.tracking.android.Dispatcher mDispatcher -> c
    com.google.analytics.tracking.android.AnalyticsStoreStateListener mListener -> d
    android.content.Context mContext -> e
    java.lang.String mDatabaseName -> f
    long mLastDeleteStaleHitsTime -> g
    com.google.analytics.tracking.android.Clock mClock -> h
    com.google.analytics.tracking.android.HttpClientFactory createDefaultHttpClientFactory() -> e
    void clearHits(long) -> a
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void fillVersionParametersIfNecessary(java.util.Map,java.util.Collection) -> a
    void storeVersion(java.util.Map,java.lang.String,java.lang.String) -> a
    void removeOldHitIfFull() -> f
    void writeHitToDatabase(java.util.Map,long,java.lang.String) -> a
    java.lang.String generateHitString(java.util.Map) -> a
    java.util.List peekHits(int) -> a
    int deleteStaleHits() -> b
    void deleteHits(java.util.Collection) -> a
    int getNumStoredHits() -> c
    void dispatch() -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    com.google.analytics.tracking.android.Clock access$000(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> a
    java.lang.String access$100(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> b
    android.content.Context access$200(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> c
    java.lang.String access$300() -> d
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> com.google.a.a.a.bf:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$2 -> com.google.a.a.a.bg:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> com.google.a.a.a.bh:
    boolean mBadDatabase -> b
    long mLastDatabaseCheckTime -> c
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void validateColumnsPresent(android.database.sqlite.SQLiteDatabase) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ServiceManager -> com.google.a.a.a.bi:
    void dispatch() -> c
    void setDispatchPeriod(int) -> a
    void updateConnectivityStatus(boolean) -> a
com.google.analytics.tracking.android.ServiceProxy -> com.google.a.a.a.bj:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    void createService() -> e
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> com.google.a.a.a.bk:
    java.lang.String userAgent -> a
    com.google.analytics.tracking.android.HttpClientFactory httpClientFactory -> b
    android.content.Context ctx -> c
    boolean okToDispatch() -> a
    int dispatchHits(java.util.List) -> a
    org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> a
    void logDebugInformation(boolean,org.apache.http.HttpEntityEnclosingRequest) -> a
    java.lang.String createUserAgentString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> a
com.google.analytics.tracking.android.StandardExceptionParser -> com.google.a.a.a.bl:
    java.util.TreeSet includedPackages -> a
    void setIncludedPackages(android.content.Context,java.util.Collection) -> a
    java.lang.Throwable getCause(java.lang.Throwable) -> a
    java.lang.StackTraceElement getBestStackTraceElement(java.lang.Throwable) -> b
    java.lang.String getDescription(java.lang.Throwable,java.lang.StackTraceElement,java.lang.String) -> a
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.Tracker -> com.google.a.a.a.bm:
    java.text.DecimalFormat DF -> a
    com.google.analytics.tracking.android.TrackerHandler mHandler -> b
    com.google.analytics.tracking.android.Tracker$SimpleModel mModel -> c
    boolean mIsTrackerClosed -> d
    boolean mIsTrackingStarted -> e
    long mTokens -> f
    long mLastTrackTime -> g
    boolean mIsThrottlingEnabled -> h
    void assertTrackerOpen() -> b
    void setStartSession(boolean) -> a
    void setAppName(java.lang.String) -> a
    void setAppVersion(java.lang.String) -> b
    void sendView(java.lang.String) -> c
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> c
    void sendEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> a
    void sendException(java.lang.String,boolean) -> a
    void internalSend(java.lang.String,java.util.Map) -> a
    void setAnonymizeIp(boolean) -> b
    void setSampleRate(double) -> a
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> b
    java.util.Map constructException(java.lang.String,boolean) -> b
    boolean tokensAvailable() -> a
com.google.analytics.tracking.android.Tracker$1 -> com.google.a.a.a.bn:
com.google.analytics.tracking.android.Tracker$SimpleModel -> com.google.a.a.a.bo:
    java.util.Map temporaryMap -> a
    java.util.Map permanentMap -> b
    void setForNextHit(java.lang.String,java.lang.String) -> a
    void set(java.lang.String,java.lang.String) -> b
    void clearTemporaryValues() -> a
    void setAll(java.util.Map,java.lang.Boolean) -> a
    java.util.Map getKeysAndValues() -> b
com.google.analytics.tracking.android.TrackerHandler -> com.google.a.a.a.bp:
    void sendHit(java.util.Map) -> a
com.google.analytics.tracking.android.Utils -> com.google.a.a.a.bq:
    char[] HEXBYTES -> a
    java.util.Map parseURLParameters(java.lang.String) -> a
    double safeParseDouble(java.lang.String) -> b
    boolean safeParseBoolean(java.lang.String) -> c
    java.lang.String filterCampaign(java.lang.String) -> d
    java.lang.String getLanguage(java.util.Locale) -> a
    int fromHexDigit(char) -> a
    byte[] hexDecode(java.lang.String) -> e
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String id -> a
    java.lang.String urlParam -> b
    java.lang.String value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> a
    java.lang.String getUrlParam() -> b
    java.lang.String getValue() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
com.google.android.gms.analytics.internal.Command$1 -> com.google.android.gms.analytics.internal.a:
    com.google.android.gms.analytics.internal.Command createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.analytics.internal.Command[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> com.google.android.gms.analytics.internal.b:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> com.google.android.gms.analytics.internal.c:
    com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> com.google.android.gms.analytics.internal.d:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.a.a.a.a.a:
    java.io.File cacheDir -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> b
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.a.a.a.a.b:
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.a.a.a.a.c:
    int cacheSize -> b
    int sizeLimit -> c
    java.util.Map lastUsageDates -> d
    void calculateCacheSizeAndFillUsageMap() -> a
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
    int removeNext() -> b
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.a.a.a.a.a.a:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.a.a.a.a.a.b:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.a.a.a.a.a.c:
    void put(java.lang.String,java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.a.a.a.a.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.a.a.a.a.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.a.a.a.a.b.c:
    java.lang.String generate(java.lang.String) -> a
    byte[] getMD5(byte[]) -> a
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.a.a.a.b.a:
    java.util.Map softMap -> a
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    void clear() -> b
    java.lang.ref.Reference createReference(java.lang.Object) -> c
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.a.a.a.b.b:
    int sizeLimit -> a
    int cacheSize -> b
    java.util.List hardCache -> c
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    void clear() -> b
    int getSizeLimit() -> c
    int getSize(java.lang.Object) -> d
    java.lang.Object removeNext() -> d
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.a.a.a.b.c:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    void clear() -> b
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.a.a.a.b.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    void clear() -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.a.a.a.b.a.b:
    java.util.Map usingCounts -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void remove(java.lang.String) -> b
    void clear() -> b
    int getSize(android.graphics.Bitmap) -> a
    android.graphics.Bitmap removeNext() -> e
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> b
    java.lang.Object get(java.lang.Object) -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
    void remove(java.lang.Object) -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    int getSize(java.lang.Object) -> d
    java.lang.Object removeNext() -> d
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.a.a.a.b.a.c:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.a.a.b.a:
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> a
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> a
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int,boolean) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> a
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> b
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.a.a.b.b:
    android.graphics.Bitmap bitmap -> a
    java.lang.String imageUri -> b
    android.widget.ImageView imageView -> c
    java.lang.String memoryCacheKey -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> g
    boolean loggingEnabled -> h
    void run() -> run
    boolean isViewWasReused() -> a
    void setLoggingEnabled(boolean) -> a
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.a.a.b.c:
    int stubImage -> a
    int imageForEmptyUri -> b
    int imageOnFail -> c
    boolean resetViewBeforeLoading -> d
    boolean cacheInMemory -> e
    boolean cacheOnDisc -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> g
    android.graphics.Bitmap$Config bitmapConfig -> h
    int delayBeforeLoading -> i
    java.lang.Object extraForDownloader -> j
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> k
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> l
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> m
    boolean shouldShowStubImage() -> a
    boolean shouldShowImageForEmptyUri() -> b
    boolean shouldShowImageOnFail() -> c
    boolean shouldPreProcess() -> d
    boolean shouldPostProcess() -> e
    boolean shouldDelayBeforeLoading() -> f
    int getStubImage() -> g
    int getImageForEmptyUri() -> h
    int getImageOnFail() -> i
    boolean isResetViewBeforeLoading() -> j
    boolean isCacheInMemory() -> k
    boolean isCacheOnDisc() -> l
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> m
    android.graphics.Bitmap$Config getBitmapConfig() -> n
    int getDelayBeforeLoading() -> o
    java.lang.Object getExtraForDownloader() -> p
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> q
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> r
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> t
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.a.a.b.d:
    int stubImage -> a
    int imageForEmptyUri -> b
    int imageOnFail -> c
    boolean resetViewBeforeLoading -> d
    boolean cacheInMemory -> e
    boolean cacheOnDisc -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> g
    android.graphics.Bitmap$Config bitmapConfig -> h
    int delayBeforeLoading -> i
    java.lang.Object extraForDownloader -> j
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> k
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> l
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> c
    int access$0(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> a
    int access$1(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> b
    int access$2(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> c
    boolean access$3(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> d
    boolean access$4(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> e
    boolean access$5(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$6(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> g
    android.graphics.Bitmap$Config access$7(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> h
    int access$8(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> i
    java.lang.Object access$9(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> j
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$10(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> k
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$11(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> l
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$12(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> m
com.nostra13.universalimageloader.core.ImageDecoder -> com.a.a.b.e:
    java.net.URI imageUri -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader imageDownloader -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions displayOptions -> c
    boolean loggingEnabled -> d
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> a
    android.graphics.BitmapFactory$Options getBitmapOptionsForImageDecoding(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> b
    int computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> c
    android.graphics.Bitmap scaleImageExactly(android.graphics.Bitmap,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> a
    void setLoggingEnabled(boolean) -> a
    void log(java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.core.ImageLoader -> com.a.a.b.f:
    java.lang.String TAG -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> b
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> c
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer -> e
    com.nostra13.universalimageloader.core.ImageLoader instance -> f
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> a
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> a
    void checkConfiguration() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize getImageSizeScaleTo(android.widget.ImageView) -> a
    int getFieldValue(java.lang.Object,java.lang.String) -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.a.a.b.g:
    android.content.Context context -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int maxImageWidthForDiscCache -> d
    int maxImageHeightForDiscCache -> e
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> f
    int imageQualityForDiscCache -> g
    int threadPoolSize -> h
    boolean handleOutOfMemory -> i
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> j
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> k
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> l
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> n
    java.util.concurrent.ThreadFactory displayImageThreadFactory -> o
    boolean loggingEnabled -> p
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> q
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.a.a.b.h:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration this$0 -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder val$builder -> b
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.a.a.b.i:
    android.content.Context context -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int maxImageWidthForDiscCache -> d
    int maxImageHeightForDiscCache -> e
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> f
    int imageQualityForDiscCache -> g
    int threadPoolSize -> h
    int threadPriority -> i
    boolean denyCacheImageMultipleSizesInMemory -> j
    boolean handleOutOfMemory -> k
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> l
    int memoryCacheSize -> m
    int discCacheSize -> n
    int discCacheFileCount -> o
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> p
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> q
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> r
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> t
    boolean loggingEnabled -> u
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> b
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> c
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> b
    void initEmptyFiledsWithDefaultValues() -> c
    android.content.Context access$0(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> a
    int access$1(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> b
    int access$2(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> c
    int access$3(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> d
    int access$4(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> e
    android.graphics.Bitmap$CompressFormat access$5(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> f
    int access$6(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> g
    int access$7(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> h
    boolean access$8(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> i
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$9(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> j
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$10(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> k
    com.nostra13.universalimageloader.core.DisplayImageOptions access$11(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> l
    boolean access$12(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> m
    com.nostra13.universalimageloader.core.download.ImageDownloader access$13(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> n
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$14(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> o
    int access$15(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> p
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.a.a.b.j:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> a
    java.util.concurrent.ExecutorService imageLoadingExecutor -> b
    java.util.concurrent.ExecutorService cachedImageLoadingExecutor -> c
    java.util.concurrent.ExecutorService taskDistributor -> d
    java.util.Map cacheKeysForImageViews -> e
    java.util.Map uriLocks -> f
    java.util.concurrent.atomic.AtomicBoolean paused -> g
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> h
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> a
    void initExecutorsIfNeed() -> c
    java.util.concurrent.ExecutorService createTaskExecutor() -> d
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> a
    void prepareDisplayTaskFor(android.widget.ImageView,java.lang.String) -> a
    void cancelDisplayTaskFor(android.widget.ImageView) -> b
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> a
    java.util.concurrent.atomic.AtomicBoolean getPause() -> a
    boolean isNetworkDenied() -> b
    java.util.concurrent.ExecutorService access$0(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    java.util.concurrent.ExecutorService access$1(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> b
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.a.a.b.k:
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> a
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> b
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.a.a.b.l:
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> b
    android.widget.ImageView imageView -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> g
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.a.a.b.m:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> e
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> f
    android.os.Handler handler -> g
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> h
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> j
    boolean loggingEnabled -> k
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> l
    android.widget.ImageView imageView -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> c
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> d
    void run() -> run
    boolean checkTaskIsNotActual() -> b
    boolean checkTaskIsInterrupted() -> c
    android.graphics.Bitmap tryLoadBitmap() -> d
    android.graphics.Bitmap decodeImage(java.net.URI) -> a
    android.graphics.Bitmap decodeWithOOMHandling(java.net.URI) -> b
    void saveImageOnDisc(java.io.File) -> a
    void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> e
    java.lang.String getLoadingUri() -> a
    void log(java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.a.a.b.n:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.a.a.b.o:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    com.nostra13.universalimageloader.core.assist.FailReason val$failReason -> b
    void run() -> run
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.a.a.b.p:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> a
    android.graphics.Bitmap bitmap -> b
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> c
    android.os.Handler handler -> d
    void run() -> run
com.nostra13.universalimageloader.core.assist.FailReason -> com.a.a.b.a.a:
    com.nostra13.universalimageloader.core.assist.FailReason IO_ERROR -> a
    com.nostra13.universalimageloader.core.assist.FailReason OUT_OF_MEMORY -> b
    com.nostra13.universalimageloader.core.assist.FailReason UNSUPPORTED_URI_SCHEME -> c
    com.nostra13.universalimageloader.core.assist.FailReason NETWORK_DENIED -> d
    com.nostra13.universalimageloader.core.assist.FailReason UNKNOWN -> e
    com.nostra13.universalimageloader.core.assist.FailReason[] ENUM$VALUES -> f
    com.nostra13.universalimageloader.core.assist.FailReason[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.a.a.b.a.b:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.a.a.b.a.c:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.a.a.b.a.d:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> a
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> b
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> e
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] ENUM$VALUES -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.a.a.b.a.e:
    int width -> a
    int height -> b
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.a.a.b.a.f:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.a.a.b.a.g:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.a.a.b.a.h:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> a
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> b
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] ENUM$VALUES -> c
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.a.a.b.a.i:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.a.a.b.a.j:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> b
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> c
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] ENUM$VALUES -> d
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> a
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.a.a.b.a.a.a:
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.a.a.b.a.a.b:
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.a.a.b.a.a.c:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.a.a.b.a.a.d:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> b
    int count -> d
    int capacity -> e
    java.util.concurrent.locks.ReentrantLock lock -> c
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.Condition notFull -> g
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> c
    java.lang.Object unlinkFirst() -> f
    java.lang.Object unlinkLast() -> g
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    void addLast(java.lang.Object) -> a
    boolean offerFirst(java.lang.Object) -> b
    boolean offerLast(java.lang.Object) -> c
    void putLast(java.lang.Object) -> d
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object removeFirst() -> a
    java.lang.Object pollFirst() -> b
    java.lang.Object takeFirst() -> c
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object getFirst() -> d
    java.lang.Object peekFirst() -> e
    boolean removeFirstOccurrence(java.lang.Object) -> e
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.a.a.b.a.a.e:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> a
    java.lang.Object nextItem -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> c
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    void advance() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.a.a.b.a.a.f:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.a.a.b.a.a.g:
    java.lang.Object item -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> c
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.a.a.b.b.a:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer -> com.a.a.b.b.b:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.a.a.b.b.c:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.a.a.b.c.a:
    android.content.Context context -> a
    int connectTimeout -> b
    int readTimeout -> c
    java.io.InputStream getStream(java.net.URI,java.lang.Object) -> a
    java.io.InputStream getStreamFromNetwork(java.net.URI,java.lang.Object) -> b
    java.io.InputStream getStreamFromFile(java.net.URI,java.lang.Object) -> c
    java.io.InputStream getStreamFromContent(java.net.URI,java.lang.Object) -> d
    java.io.InputStream getStreamFromAssets(java.net.URI,java.lang.Object) -> e
    java.io.InputStream getStreamFromDrawable(java.net.URI,java.lang.Object) -> f
    java.io.InputStream getStreamFromOtherSource(java.net.URI,java.lang.Object) -> g
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.a.a.b.c.b:
    java.io.InputStream getStream(java.net.URI,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.a.a.b.c.c:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.net.URI,java.lang.Object) -> a
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.a.a.b.d.a:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.utils.IoUtils -> com.a.a.c.a:
    void copyStream(java.io.InputStream,java.io.OutputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.L -> com.a.a.c.b:
    void i(java.lang.String,java.lang.Object[]) -> a
    void w(java.lang.String,java.lang.Object[]) -> b
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> c
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.StorageUtils -> com.a.a.c.c:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
com.slidingmenu.lib.CustomViewAbove -> com.slidingmenu.lib.a:
    android.view.animation.Interpolator sInterpolator -> e
    android.widget.FrameLayout mMenu -> f
    android.widget.FrameLayout mContent -> g
    int mCurItem -> h
    android.widget.Scroller mScroller -> i
    int mShadowWidth -> j
    android.graphics.drawable.Drawable mShadowDrawable -> k
    boolean mScrollingCacheEnabled -> l
    boolean mScrolling -> m
    boolean mIsBeingDragged -> n
    int mTouchSlop -> o
    float mInitialMotionX -> p
    float mLastMotionX -> q
    float mLastMotionY -> r
    int mActivePointerId -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mMinimumVelocity -> s
    int mMaximumVelocity -> c
    int mFlingDistance -> t
    boolean mLastTouchAllowed -> u
    int mSlidingMenuThreshold -> v
    com.slidingmenu.lib.CustomViewBehind mCustomViewBehind -> w
    boolean mEnabled -> x
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> y
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> z
    com.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> A
    com.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> B
    int mTouchMode -> d
    int mTouchModeBehind -> C
    boolean mIsUnableToDrag -> D
    float mScrollScale -> E
    float mScrollX -> F
    boolean mFadeEnabled -> G
    float mFadeDegree -> H
    android.graphics.Paint mBehindFadePaint -> I
    boolean mSelectorEnabled -> J
    android.graphics.Bitmap mSelectorDrawable -> K
    android.view.View mSelectedView -> L
    void initCustomViewAbove(boolean) -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> a
    void setShadowWidth(int) -> setShadowWidth
    int getShadowWidth() -> getShadowWidth
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawable(int) -> setShadowDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    int getDestScrollX() -> getDestScrollX
    int getChildLeft(int) -> a
    boolean isMenuOpen() -> a
    int getCustomWidth() -> getCustomWidth
    int getChildWidth(int) -> b
    int getBehindWidth() -> getBehindWidth
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int,int) -> a
    void setMenu(android.view.View) -> setMenu
    void setContent(android.view.View) -> setContent
    void setCustomViewBehind(com.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> d
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    void setTouchModeBehind(int) -> setTouchModeBehind
    int getTouchModeBehind() -> getTouchModeBehind
    boolean thisTouchAllowed(android.view.MotionEvent) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getScrollScale() -> getScrollScale
    void setScrollScale(float) -> setScrollScale
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(int,float,int,int) -> a
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void onDraw(android.graphics.Canvas) -> onDraw
    void onDrawBehindFade(android.graphics.Canvas,float) -> a
    void onDrawMenuSelector(android.graphics.Canvas,float) -> b
    void setBehindFadeEnabled(boolean) -> setBehindFadeEnabled
    void setBehindFadeDegree(float) -> setBehindFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectedTop() -> getSelectedTop
    void setSelectorDrawable(android.graphics.Bitmap) -> setSelectorDrawable
    void onSecondaryPointerUp(android.view.MotionEvent) -> b
    void endDrag() -> e
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    boolean pageLeft() -> b
    boolean pageRight() -> c
    com.slidingmenu.lib.CustomViewBehind access$0(com.slidingmenu.lib.CustomViewAbove) -> a
com.slidingmenu.lib.CustomViewAbove$1 -> com.slidingmenu.lib.b:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CustomViewAbove$2 -> com.slidingmenu.lib.c:
    com.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.slidingmenu.lib.d:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.slidingmenu.lib.e:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewBehind -> com.slidingmenu.lib.f:
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> e
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> f
    boolean mChildrenEnabled -> g
    void setCustomViewAbove(com.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setTouchMode(int) -> setTouchMode
    void setCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    int getChildLeft(int) -> a
    int getCustomWidth() -> getCustomWidth
    int getChildWidth(int) -> b
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.slidingmenu.lib.R -> com.slidingmenu.lib.g:
com.slidingmenu.lib.R$id -> com.slidingmenu.lib.h:
    int fullscreen -> fullscreen
    int slidingmenumain -> slidingmenumain
    int slidingmenulayout -> slidingmenulayout
    int selected_view -> selected_view
    int slidingmenurowicon -> slidingmenurowicon
    int slidingmenurowtitle -> slidingmenurowtitle
    int margin -> margin
com.slidingmenu.lib.R$styleable -> com.slidingmenu.lib.i:
    int SlidingMenu_behindFadeEnabled -> SlidingMenu_behindFadeEnabled
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_aboveTouchMode -> SlidingMenu_aboveTouchMode
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindTouchMode -> SlidingMenu_behindTouchMode
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
    int SlidingMenu_behindFadeDegree -> SlidingMenu_behindFadeDegree
com.slidingmenu.lib.SlidingMenu -> com.slidingmenu.lib.SlidingMenu:
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> a
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> b
    com.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> c
    com.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> d
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setStatic(boolean) -> setStatic
    void showBehind() -> a
    void showAbove() -> b
    boolean isBehindShowing() -> c
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    float getBehindScrollScale() -> getBehindScrollScale
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    int getTouchModeBehind() -> getTouchModeBehind
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorDrawable(android.graphics.Bitmap) -> setSelectorDrawable
    void setOnOpenListener(com.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    com.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.slidingmenu.lib.SlidingMenu) -> a
    com.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.slidingmenu.lib.SlidingMenu) -> b
com.slidingmenu.lib.SlidingMenu$1 -> com.slidingmenu.lib.j:
    com.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.slidingmenu.lib.k:
    void transformCanvas(android.graphics.Canvas,float) -> a
com.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.slidingmenu.lib.l:
    void onClose() -> a
com.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.slidingmenu.lib.m:
    void onClosed() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.slidingmenu.lib.n:
    void onOpen() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.slidingmenu.lib.o:
    void onOpened() -> a
com.slidingmenu.lib.SlidingMenu$SavedState -> com.slidingmenu.lib.SlidingMenu$SavedState:
    boolean mBehindShowing -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
gen.entertainments.gentv.FragmentListChannels -> gen.entertainments.gentv.a:
    android.app.ProgressDialog mSpinner -> P
    android.app.Activity mActivity -> Q
    android.view.View mainView -> R
    android.widget.ListView mListView -> S
    gen.entertainments.gentv.adapter.ChannelsAdapter mAdapter -> T
    java.util.HashMap mMapCatIdToData -> U
    java.lang.String mCurrentCatId -> V
    gen.entertainments.gentv.database.DatabaseDAO mDatabaseDAO -> W
    gen.entertainments.gentv.FragmentListChannels$OnPlayChannel mOnPlayChannel -> X
    android.widget.AdapterView$OnItemClickListener mOnClickChannel -> Y
    gen.entertainments.gentv.FragmentListChannels getIntance(java.lang.String,gen.entertainments.gentv.FragmentListChannels$OnPlayChannel) -> a
    void setData(java.lang.String,gen.entertainments.gentv.FragmentListChannels$OnPlayChannel) -> b
    void onAttach(android.app.Activity) -> a
    void onDestroy() -> m
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void initUI() -> A
    void onSelectCatId(java.lang.String) -> a
    void getOrDownloadData(java.lang.String) -> b
    void refreshListFavouriteChannels() -> z
    void notifyDataSetChanged(java.lang.String) -> c
    void access$0(gen.entertainments.gentv.FragmentListChannels,java.lang.String) -> a
gen.entertainments.gentv.FragmentListChannels$1 -> gen.entertainments.gentv.b:
    gen.entertainments.gentv.FragmentListChannels this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
gen.entertainments.gentv.FragmentListChannels$DownloadDataRunnable -> gen.entertainments.gentv.c:
    java.lang.String mCatId -> a
    gen.entertainments.gentv.FragmentListChannels this$0 -> b
    void run() -> run
    gen.entertainments.gentv.FragmentListChannels access$0(gen.entertainments.gentv.FragmentListChannels$DownloadDataRunnable) -> a
gen.entertainments.gentv.FragmentListChannels$DownloadDataRunnable$1 -> gen.entertainments.gentv.d:
    gen.entertainments.gentv.FragmentListChannels$DownloadDataRunnable this$1 -> a
    void run() -> run
gen.entertainments.gentv.FragmentListChannels$DownloadDataRunnable$2 -> gen.entertainments.gentv.e:
    gen.entertainments.gentv.FragmentListChannels$DownloadDataRunnable this$1 -> a
    org.json.JSONArray val$apiResponse -> b
    void run() -> run
gen.entertainments.gentv.FragmentListChannels$OnPlayChannel -> gen.entertainments.gentv.f:
    void playChannel(org.json.JSONArray,int) -> a
gen.entertainments.gentv.FragmentMenu -> gen.entertainments.gentv.g:
    android.app.Activity mActivity -> P
    android.view.View mainLayout -> Q
    android.view.View currentSelected -> R
    android.view.LayoutInflater mInflater -> S
    gen.entertainments.gentv.FragmentMenu$OnMenuCategorySelection mOnMenuCategorySelection -> T
    android.view.View$OnClickListener mOnClickCategoryListener -> U
    gen.entertainments.gentv.FragmentMenu getInstance(gen.entertainments.gentv.FragmentMenu$OnMenuCategorySelection) -> a
    void setData(gen.entertainments.gentv.FragmentMenu$OnMenuCategorySelection) -> b
    void onAttach(android.app.Activity) -> a
    void setActivity(android.app.Activity) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void initUI() -> z
    void buildPersonalUI() -> A
    void buildCategoriesChannelUI(org.json.JSONArray) -> a
    void buildSettingsUI() -> B
    void showAboutDialog() -> C
    void access$0(gen.entertainments.gentv.FragmentMenu,org.json.JSONArray) -> a
    void access$1(gen.entertainments.gentv.FragmentMenu) -> a
gen.entertainments.gentv.FragmentMenu$1 -> gen.entertainments.gentv.h:
    gen.entertainments.gentv.FragmentMenu this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.FragmentMenu$2 -> gen.entertainments.gentv.i:
    gen.entertainments.gentv.FragmentMenu this$0 -> a
    void run() -> run
    gen.entertainments.gentv.FragmentMenu access$0(gen.entertainments.gentv.FragmentMenu$2) -> a
gen.entertainments.gentv.FragmentMenu$2$1 -> gen.entertainments.gentv.j:
    gen.entertainments.gentv.FragmentMenu$2 this$1 -> a
    org.json.JSONArray val$categoryDataJSON -> b
    void run() -> run
gen.entertainments.gentv.FragmentMenu$3 -> gen.entertainments.gentv.k:
    gen.entertainments.gentv.FragmentMenu this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.FragmentMenu$4 -> gen.entertainments.gentv.l:
    gen.entertainments.gentv.FragmentMenu this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.FragmentMenu$OnMenuCategorySelection -> gen.entertainments.gentv.m:
    void onSelect(java.lang.String) -> a
gen.entertainments.gentv.FragmentPlay -> gen.entertainments.gentv.n:
    android.app.Activity mActivity -> P
    android.view.View mainLayout -> Q
    android.widget.ListView mListView -> R
    android.widget.RelativeLayout mLayoutVideoPlayer -> W
    gen.entertainments.gentv.adapter.ChannelsAdapter mAdapter -> S
    org.json.JSONArray mListChannelsData -> T
    gen.entertainments.gentv.database.DatabaseDAO mDatabaseDAO -> X
    int mCurrentPosition -> Y
    int mCurrentStreamPosition -> Z
    gen.entertainments.gentv.utils.MCrypt mMCrypt -> U
    java.lang.String mTitle -> aa
    java.lang.String mPath -> ab
    io.vov.vitamio.widget.VideoView mVideoView -> ac
    android.view.View mVolumeBrightnessLayout -> ad
    android.widget.ImageView mOperationBg -> ae
    android.widget.ImageView mOperationPercent -> af
    android.media.AudioManager mAudioManager -> ag
    android.widget.TextView mTitleChannel -> ah
    android.widget.TextView mServerError -> ai
    android.widget.ProgressBar mProgressBarLoading -> aj
    int mMaxVolume -> ak
    int mVolume -> al
    float mBrightness -> am
    int mLayout -> an
    android.view.GestureDetector mGestureDetector -> ao
    io.vov.vitamio.widget.MediaController mMediaController -> ap
    int mHeight -> aq
    android.widget.AdapterView$OnItemClickListener mOnPlayChannel -> V
    android.os.Handler mDismissHandler -> ar
    gen.entertainments.gentv.FragmentPlay getIntance() -> z
    void onAttach(android.app.Activity) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void initUI() -> A
    void updateLayoutListener(int) -> b
    void startPlayStream(java.lang.String,java.lang.String) -> a
    void onPause() -> j
    void onResume() -> i
    void onDestroy() -> m
    android.view.GestureDetector getGestureDetector() -> B
    void playChannel(org.json.JSONArray,int) -> a
    void onClickLike() -> C
    void onClickFull() -> D
    void onReturnMainScreen() -> E
    void hideActionBar() -> F
    void showActionBar() -> G
    void showSelectServerDialog() -> H
    void playChannel(int,int) -> a
    void endGesture() -> I
    void taskOnDoubleTap() -> J
    void taskSlide(android.view.MotionEvent,android.view.MotionEvent) -> a
    void onVolumeSlide(float) -> a
    void onBrightnessSlide(float) -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
    void relayoutLandscape() -> K
    void relayoutPortrait() -> L
    void startChooseServer() -> startChooseServer
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
    android.view.View access$0(gen.entertainments.gentv.FragmentPlay) -> a
    io.vov.vitamio.widget.VideoView access$1(gen.entertainments.gentv.FragmentPlay) -> b
    android.widget.RelativeLayout access$2(gen.entertainments.gentv.FragmentPlay) -> c
    int access$3(gen.entertainments.gentv.FragmentPlay) -> d
gen.entertainments.gentv.FragmentPlay$1 -> gen.entertainments.gentv.o:
    gen.entertainments.gentv.FragmentPlay this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
gen.entertainments.gentv.FragmentPlay$2 -> gen.entertainments.gentv.p:
    gen.entertainments.gentv.FragmentPlay this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
gen.entertainments.gentv.FragmentPlay$3 -> gen.entertainments.gentv.q:
    gen.entertainments.gentv.FragmentPlay this$0 -> a
    android.app.Dialog val$dialog -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
gen.entertainments.gentv.FragmentPlay$4 -> gen.entertainments.gentv.r:
    gen.entertainments.gentv.FragmentPlay this$0 -> a
    java.lang.String val$specialChannelId -> b
    java.lang.String val$channelName -> c
    void run() -> run
    gen.entertainments.gentv.FragmentPlay access$0(gen.entertainments.gentv.FragmentPlay$4) -> a
gen.entertainments.gentv.FragmentPlay$4$1 -> gen.entertainments.gentv.s:
    gen.entertainments.gentv.FragmentPlay$4 this$1 -> a
    org.json.JSONObject val$linkData -> b
    java.lang.String val$channelName -> c
    void run() -> run
gen.entertainments.gentv.FragmentPlay$MyGestureListener -> gen.entertainments.gentv.t:
    boolean downInAreaVideoView -> b
    gen.entertainments.gentv.FragmentPlay this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
gen.entertainments.gentv.MainActivity -> gen.entertainments.gentv.MainActivity:
    android.support.v4.app.FragmentManager mFragmentManager -> n
    gen.entertainments.gentv.FragmentMenu mFragmentMenu -> o
    gen.entertainments.gentv.FragmentListChannels mFragmentListChannels -> p
    gen.entertainments.gentv.FragmentPlay mFragmentPlay -> q
    com.slidingmenu.lib.SlidingMenu mSlidingMenu -> r
    boolean isShowingSoftKeyboard -> s
    int defaultAutoRotate -> t
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOnBackStackChangedListener -> u
    gen.entertainments.gentv.FragmentListChannels$OnPlayChannel mOnPlayChannel -> v
    gen.entertainments.gentv.FragmentMenu$OnMenuCategorySelection mOnMenuCategorySelection -> w
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void readConfig() -> f
    boolean mustShowNotify(java.lang.String,java.lang.String) -> a
    void showNotifyDialog(java.lang.String) -> c
    void showSplash() -> g
    void initUI() -> h
    void initTopButtons() -> i
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initFragment() -> j
    void initAdView(java.lang.String) -> b
    void hideAdView() -> k
    void showAdView() -> l
    void changeImageClosePosition() -> m
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void showExitDialog() -> n
    void access$0(gen.entertainments.gentv.MainActivity) -> a
    void access$1(gen.entertainments.gentv.MainActivity) -> b
    void access$2(gen.entertainments.gentv.MainActivity) -> c
    void access$3(gen.entertainments.gentv.MainActivity) -> d
    boolean access$4(gen.entertainments.gentv.MainActivity,java.lang.String,java.lang.String) -> a
    void access$5(gen.entertainments.gentv.MainActivity,java.lang.String) -> a
    void access$6(gen.entertainments.gentv.MainActivity) -> e
    void access$7(gen.entertainments.gentv.MainActivity) -> f
gen.entertainments.gentv.MainActivity$1 -> gen.entertainments.gentv.u:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onBackStackChanged() -> a
    gen.entertainments.gentv.MainActivity access$0(gen.entertainments.gentv.MainActivity$1) -> a
gen.entertainments.gentv.MainActivity$1$1 -> gen.entertainments.gentv.v:
    gen.entertainments.gentv.MainActivity$1 this$1 -> a
    void run() -> run
gen.entertainments.gentv.MainActivity$10 -> gen.entertainments.gentv.w:
    gen.entertainments.gentv.MainActivity this$0 -> a
    android.view.View val$mainLayout -> b
    void onGlobalLayout() -> onGlobalLayout
gen.entertainments.gentv.MainActivity$11 -> gen.entertainments.gentv.x:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$12 -> gen.entertainments.gentv.y:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$13 -> gen.entertainments.gentv.z:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$14 -> gen.entertainments.gentv.aa:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$15 -> gen.entertainments.gentv.ab:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$16 -> gen.entertainments.gentv.ac:
    gen.entertainments.gentv.MainActivity this$0 -> a
    java.lang.String val$admobId -> b
    void run() -> run
    gen.entertainments.gentv.MainActivity access$0(gen.entertainments.gentv.MainActivity$16) -> a
gen.entertainments.gentv.MainActivity$16$1 -> gen.entertainments.gentv.ad:
    gen.entertainments.gentv.MainActivity$16 this$1 -> a
    void onClick(android.view.View) -> onClick
    gen.entertainments.gentv.MainActivity$16 access$0(gen.entertainments.gentv.MainActivity$16$1) -> a
gen.entertainments.gentv.MainActivity$16$1$1 -> gen.entertainments.gentv.ae:
    gen.entertainments.gentv.MainActivity$16$1 this$2 -> a
    void run() -> run
gen.entertainments.gentv.MainActivity$17 -> gen.entertainments.gentv.af:
    gen.entertainments.gentv.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$18 -> gen.entertainments.gentv.ag:
    gen.entertainments.gentv.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$2 -> gen.entertainments.gentv.ah:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void playChannel(org.json.JSONArray,int) -> a
gen.entertainments.gentv.MainActivity$3 -> gen.entertainments.gentv.ai:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void onSelect(java.lang.String) -> a
gen.entertainments.gentv.MainActivity$4 -> gen.entertainments.gentv.aj:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void run() -> run
gen.entertainments.gentv.MainActivity$5 -> gen.entertainments.gentv.ak:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void run() -> run
gen.entertainments.gentv.MainActivity$6 -> gen.entertainments.gentv.al:
    gen.entertainments.gentv.MainActivity this$0 -> a
    void run() -> run
    gen.entertainments.gentv.MainActivity access$0(gen.entertainments.gentv.MainActivity$6) -> a
gen.entertainments.gentv.MainActivity$6$1 -> gen.entertainments.gentv.am:
    gen.entertainments.gentv.MainActivity$6 this$1 -> a
    org.json.JSONObject val$configData -> b
    void run() -> run
gen.entertainments.gentv.MainActivity$7 -> gen.entertainments.gentv.an:
    gen.entertainments.gentv.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$8 -> gen.entertainments.gentv.ao:
    gen.entertainments.gentv.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
gen.entertainments.gentv.MainActivity$9 -> gen.entertainments.gentv.ap:
    gen.entertainments.gentv.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void run() -> run
gen.entertainments.gentv.R -> gen.entertainments.gentv.aq:
gen.entertainments.gentv.R$styleable -> gen.entertainments.gentv.ar:
    int[] RobotoTextView -> RobotoTextView
    int RobotoTextView_roboto_style -> RobotoTextView_roboto_style
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_aboveTouchMode -> SlidingMenu_aboveTouchMode
    int SlidingMenu_behindFadeDegree -> SlidingMenu_behindFadeDegree
    int SlidingMenu_behindFadeEnabled -> SlidingMenu_behindFadeEnabled
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindTouchMode -> SlidingMenu_behindTouchMode
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
gen.entertainments.gentv.adapter.ChannelsAdapter -> gen.entertainments.gentv.a.a:
    org.json.JSONArray mJsonArray -> b
    android.content.Context mContext -> c
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions mDisplayImageOptions -> e
    boolean isSmallList -> a
    void setData(org.json.JSONArray) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
gen.entertainments.gentv.adapter.ChannelsAdapter$ViewHolder -> gen.entertainments.gentv.a.b:
    android.widget.ImageView imgChannel -> a
    android.widget.TextView tvChannelName -> b
    android.widget.TextView tvChannelDescription -> c
gen.entertainments.gentv.customview.RobotoTextView -> gen.entertainments.gentv.customview.RobotoTextView:
    void init(int) -> a
gen.entertainments.gentv.database.DatabaseDAO -> gen.entertainments.gentv.b.a:
    gen.entertainments.gentv.database.DatabaseHelper mDatabaseHelper -> a
    android.database.sqlite.SQLiteDatabase mSqLiteDatabase -> b
    void close() -> a
    boolean checkFavouriteChannelExist(java.lang.String) -> a
    void insertFavouriteChannel(java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteFavouriteChannel(java.lang.String) -> b
    org.json.JSONArray getFavouriteChannel() -> b
    boolean checkCategoryChannelExist(java.lang.String) -> c
    void insertCategoryChannel(java.lang.String,java.lang.String,java.lang.String) -> b
    void updateCategoryChannel(java.lang.String,java.lang.String,java.lang.String) -> c
    void pushCategoryChannel(java.lang.String,java.lang.String,java.lang.String) -> d
    org.json.JSONArray getCategoryData(java.lang.String) -> d
    java.lang.String getCategoryChannelVersion(java.lang.String) -> e
gen.entertainments.gentv.database.DatabaseHelper -> gen.entertainments.gentv.b.b:
    java.lang.String TB_FAVOURITE_CHANNEL -> a
    java.lang.String CL_FAVOURITE_CHANNEL_ID -> b
    java.lang.String CL_FAVOURITE_CHANNEL_VERSION -> c
    java.lang.String CL_FAVOURITE_CHANNEL_DATA -> d
    java.lang.String CREATE_TB_FAVOURITE_CHANNEL -> i
    java.lang.String TB_CATEGORY_CHANNEL -> e
    java.lang.String CL_CATEGORY_CHANNEL_ID -> f
    java.lang.String CL_CATEGORY_CHANNEL_VERSION -> g
    java.lang.String CL_CATEGORY_CHANNEL_DATA -> h
    java.lang.String CREATE_TB_CATEGORY_CHANNEL -> j
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
gen.entertainments.gentv.dataservices.ServiceHelper -> gen.entertainments.gentv.c.a:
    int TIMEOUT_CONNECTION -> a
    int TIMEOUT_SOCKET -> b
    java.lang.Object getData(java.lang.String,boolean) -> a
gen.entertainments.gentv.dataservices.UpdateDataService -> gen.entertainments.gentv.c.b:
    void updateData(android.content.Context,java.lang.String) -> a
    boolean updateCategory(android.content.SharedPreferences,gen.entertainments.gentv.database.DatabaseDAO,java.lang.String) -> a
    boolean updateListChannels(gen.entertainments.gentv.database.DatabaseDAO,java.lang.String,java.lang.String) -> a
gen.entertainments.gentv.dataservices.UpdateDataService$1 -> gen.entertainments.gentv.c.c:
    android.content.Context val$context -> a
    java.lang.String val$version -> b
    void run() -> run
gen.entertainments.gentv.trackerrors.MyApplication -> gen.entertainments.gentv.trackerrors.MyApplication:
    void onCreate() -> onCreate
gen.entertainments.gentv.utils.Logger -> gen.entertainments.gentv.d.a:
    boolean isDebug -> a
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String) -> a
gen.entertainments.gentv.utils.MCrypt -> gen.entertainments.gentv.d.b:
    javax.crypto.spec.IvParameterSpec mIvspec -> a
    java.lang.String mSecretKey -> b
    javax.crypto.spec.SecretKeySpec mKeyspec -> c
    javax.crypto.Cipher cipher -> d
    byte[] decryptFromByteArray(byte[]) -> a
    java.lang.String decryptFromHexString(java.lang.String) -> a
    byte[] hexToBytes(java.lang.String) -> b
gen.entertainments.gentv.utils.NameSpace -> gen.entertainments.gentv.d.c:
    java.lang.String IV -> a
    java.lang.String SECRET -> b
    void initEncrypt() -> a
gen.entertainments.gentv.utils.Utils -> gen.entertainments.gentv.d.d:
    boolean checkInternet(android.content.Context) -> a
    void toast(android.content.Context,java.lang.String) -> a
    void checkInternetAndToast(android.content.Context) -> b
io.vov.utils.AndroidContextUtils -> io.vov.utils.AndroidContextUtils:
    int getVersionCode(android.content.Context) -> getVersionCode
    java.lang.String getDataDir(android.content.Context) -> getDataDir
io.vov.utils.CPU -> io.vov.utils.CPU:
    java.util.Map cpuinfo -> cpuinfo
    int cachedFeature -> cachedFeature
    java.lang.String cachedFeatureString -> cachedFeatureString
    int FEATURE_ARM_V5TE -> FEATURE_ARM_V5TE
    int FEATURE_ARM_V6 -> FEATURE_ARM_V6
    int FEATURE_ARM_VFP -> FEATURE_ARM_VFP
    int FEATURE_ARM_V7A -> FEATURE_ARM_V7A
    int FEATURE_ARM_VFPV3 -> FEATURE_ARM_VFPV3
    int FEATURE_ARM_NEON -> FEATURE_ARM_NEON
    java.lang.String getFeatureString() -> getFeatureString
    int getFeature() -> getFeature
    int getCachedFeature() -> getCachedFeature
    boolean isDroidXDroid2() -> isDroidXDroid2
io.vov.utils.FileUtils -> io.vov.utils.FileUtils:
    java.lang.String getCanonical(java.io.File) -> getCanonical
    java.lang.String getPath(java.lang.String) -> getPath
    java.lang.String getName(java.lang.String) -> getName
    void deleteDir(java.io.File) -> deleteDir
io.vov.utils.IOUtils -> io.vov.utils.IOUtils:
    void closeStream(java.io.Closeable) -> closeStream
io.vov.utils.Log -> io.vov.utils.Log:
    java.lang.String TAG -> TAG
    void i(java.lang.String,java.lang.Object[]) -> i
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
io.vov.utils.StringUtils -> io.vov.utils.StringUtils:
    java.lang.String fixLastSlash(java.lang.String) -> fixLastSlash
    int convertToInt(java.lang.String) -> convertToInt
    java.lang.String generateTime(long) -> generateTime
    boolean isBlank(java.lang.String) -> isBlank
io.vov.vitamio.DTO.YTObject -> io.vov.vitamio.DTO.YTObject:
    int size -> size
    java.util.ArrayList ytStream -> ytStream
    void parseData(java.lang.String[]) -> parseData
    void createYTStream(java.lang.String[],java.lang.String[],java.lang.String[]) -> createYTStream
    java.util.ArrayList getStream() -> getStream
    void setStream(java.util.ArrayList) -> setStream
    int getSize() -> getSize
    void setSize(int) -> setSize
io.vov.vitamio.DTO.YTStream -> io.vov.vitamio.DTO.YTStream:
    int iTag -> iTag
    java.lang.String url -> url
    java.lang.String type -> type
    java.lang.String signature -> signature
    java.lang.String quality -> quality
    java.lang.String toString() -> toString
    int getiTag() -> getiTag
    void setiTag(int) -> setiTag
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getSignature() -> getSignature
    void setSignature(java.lang.String) -> setSignature
    java.lang.String getQuality() -> getQuality
    void setQuality(java.lang.String) -> setQuality
io.vov.vitamio.LibsChecker -> io.vov.vitamio.LibsChecker:
    java.lang.String FROM_ME -> FROM_ME
    boolean checkVitamioLibs(android.app.Activity) -> checkVitamioLibs
io.vov.vitamio.MediaMetadataRetriever -> io.vov.vitamio.MediaMetadataRetriever:
    boolean NATIVE_LIB_LOADED -> NATIVE_LIB_LOADED
    android.content.Context mContext -> mContext
    android.content.res.AssetFileDescriptor mFD -> mFD
    void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    java.lang.String extractMetadata(int) -> extractMetadata
    android.graphics.Bitmap getFrameAtTime(long) -> getFrameAtTime
    void _release() -> _release
    void release() -> release
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void native_init() -> native_init
    void native_finalize() -> native_finalize
    void finalize() -> finalize
    void closeFD() -> closeFD
io.vov.vitamio.MediaPlayer -> io.vov.vitamio.MediaPlayer:
    java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED -> NATIVE_LIB_LOADED
    java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED -> NATIVE_OMX_LOADED
    java.lang.Object NATIVE_LOCK -> NATIVE_LOCK
    android.content.Context mContext -> mContext
    android.view.Surface mSurface -> mSurface
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    io.vov.vitamio.MediaPlayer$EventHandler mEventHandler -> mEventHandler
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    boolean mScreenOnWhilePlaying -> mScreenOnWhilePlaying
    boolean mStayAwake -> mStayAwake
    android.content.res.AssetFileDescriptor mFD -> mFD
    io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener -> mOnHWRenderFailedListener
    int MEDIA_NOP -> MEDIA_NOP
    int MEDIA_PREPARED -> MEDIA_PREPARED
    int MEDIA_PLAYBACK_COMPLETE -> MEDIA_PLAYBACK_COMPLETE
    int MEDIA_BUFFERING_UPDATE -> MEDIA_BUFFERING_UPDATE
    int MEDIA_SEEK_COMPLETE -> MEDIA_SEEK_COMPLETE
    int MEDIA_SET_VIDEO_SIZE -> MEDIA_SET_VIDEO_SIZE
    int MEDIA_ERROR -> MEDIA_ERROR
    int MEDIA_INFO -> MEDIA_INFO
    int MEDIA_SUBTITLE_UPDATE -> MEDIA_SUBTITLE_UPDATE
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> mOnPreparedListener
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> mOnCompletionListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> mOnBufferingUpdateListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> mOnSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener -> mOnVideoSizeChangedListener
    int MEDIA_ERROR_UNKNOWN -> MEDIA_ERROR_UNKNOWN
    int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK -> MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> mOnErrorListener
    int MEDIA_INFO_VIDEO_TRACK_LAGGING -> MEDIA_INFO_VIDEO_TRACK_LAGGING
    int MEDIA_INFO_BUFFERING_START -> MEDIA_INFO_BUFFERING_START
    int MEDIA_INFO_BUFFERING_END -> MEDIA_INFO_BUFFERING_END
    int MEDIA_INFO_NOT_SEEKABLE -> MEDIA_INFO_NOT_SEEKABLE
    int MEDIA_INFO_DOWNLOAD_RATE_CHANGED -> MEDIA_INFO_DOWNLOAD_RATE_CHANGED
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> mOnInfoListener
    java.lang.String MEDIA_SUBTITLE_STRING -> MEDIA_SUBTITLE_STRING
    java.lang.String MEDIA_SUBTITLE_BYTES -> MEDIA_SUBTITLE_BYTES
    java.lang.String MEDIA_SUBTITLE_TYPE -> MEDIA_SUBTITLE_TYPE
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener -> mOnSubtitleUpdateListener
    int VIDEOQUALITY_LOW -> VIDEOQUALITY_LOW
    int VIDEOQUALITY_MEDIUM -> VIDEOQUALITY_MEDIUM
    int VIDEOQUALITY_HIGH -> VIDEOQUALITY_HIGH
    int CPU_FEATURE_LOW -> CPU_FEATURE_LOW
    int CPU_FEATURE_VFPv3 -> CPU_FEATURE_VFPv3
    int CPU_FEATURE_ARMv7 -> CPU_FEATURE_ARMv7
    int CPU_FEATURE_NEON -> CPU_FEATURE_NEON
    int SUBTITLE_TEXT -> SUBTITLE_TEXT
    int SUBTITLE_BITMAP -> SUBTITLE_BITMAP
    int SUBTITLE_INTERNAL -> SUBTITLE_INTERNAL
    int SUBTITLE_EXTERNAL -> SUBTITLE_EXTERNAL
    java.lang.String[] SUB_TYPES -> SUB_TYPES
    android.media.AudioTrack mAudioTrack -> mAudioTrack
    int mAudioTrackBufferSize -> mAudioTrackBufferSize
    android.view.Surface mLocalSurface -> mLocalSurface
    android.graphics.Bitmap mBitmap -> mBitmap
    java.nio.ByteBuffer mByteBuffer -> mByteBuffer
    boolean isLibraryLoaded() -> isLibraryLoaded
    void _setVideoSurface() -> _setVideoSurface
    void setDisplay(android.view.SurfaceHolder) -> setDisplay
    void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    void onHWRenderFailed() -> onHWRenderFailed
    void setOnHWRenderFailedListener(io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener) -> setOnHWRenderFailedListener
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    void prepare() -> prepare
    void prepareAsync() -> prepareAsync
    void start() -> start
    void _start() -> _start
    void stop() -> stop
    void _stop() -> _stop
    void pause() -> pause
    void _pause() -> _pause
    void setWakeMode(android.content.Context,int) -> setWakeMode
    void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    void stayAwake(boolean) -> stayAwake
    void updateSurfaceScreenOn() -> updateSurfaceScreenOn
    int getVideoWidth() -> getVideoWidth
    int getVideoWidth_a() -> getVideoWidth_a
    int getVideoHeight() -> getVideoHeight
    int getVideoHeight_a() -> getVideoHeight_a
    boolean isPlaying() -> isPlaying
    void seekTo(long) -> seekTo
    long getCurrentPosition() -> getCurrentPosition
    android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    long getDuration() -> getDuration
    void release() -> release
    void _release() -> _release
    void reset() -> reset
    void _reset() -> _reset
    void closeFD() -> closeFD
    void setVolume(float,float) -> setVolume
    void native_init(java.lang.String) -> native_init
    void native_finalize() -> native_finalize
    void finalize() -> finalize
    void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object) -> postEventFromNative
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnVideoSizeChangedListener(io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener) -> setOnVideoSizeChangedListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void setOnSubtitleUpdateListener(io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener) -> setOnSubtitleUpdateListener
    void updateSub(int,byte[],java.lang.String,int,int) -> updateSub
    void _releaseVideoSurface() -> _releaseVideoSurface
    void releaseDisplay() -> releaseDisplay
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoQuality(int) -> setVideoQuality
    void setDeinterlace(boolean) -> setDeinterlace
    void setBufferSize(int) -> setBufferSize
    boolean isBuffering() -> isBuffering
    int getBufferProgress() -> getBufferProgress
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    java.lang.String getMetaEncoding() -> getMetaEncoding
    byte[] getAudioTracks() -> getAudioTracks
    java.util.HashMap getAudioTrackMap(java.lang.String) -> getAudioTrackMap
    int getAudioTrack() -> getAudioTrack
    void setAudioTrack(int) -> setAudioTrack
    void setInitialAudioTrack(int) -> setInitialAudioTrack
    void setInitialSubTrack(int) -> setInitialSubTrack
    void setSubShown(boolean) -> setSubShown
    void setSubEncoding(java.lang.String) -> setSubEncoding
    int getSubLocation() -> getSubLocation
    void setSubPath(java.lang.String) -> setSubPath
    java.lang.String getSubPath() -> getSubPath
    void setSubTrack(int) -> setSubTrack
    int getSubTrack() -> getSubTrack
    byte[] getSubTracks() -> getSubTracks
    java.util.HashMap getSubTrackMap(java.lang.String) -> getSubTrackMap
    java.util.HashMap getTrackMap(byte[],java.lang.String) -> getTrackMap
    boolean loadVAO_native(java.lang.String) -> loadVAO_native
    boolean loadVVO_native(java.lang.String) -> loadVVO_native
    boolean loadOMX_native(java.lang.String) -> loadOMX_native
    void unloadOMX_native() -> unloadOMX_native
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    int getCPUFeature() -> getCPUFeature
    boolean postMessage(java.lang.String) -> postMessage
    int audioTrackInit(int,int) -> audioTrackInit
    void audioTrackSetVolume(float,float) -> audioTrackSetVolume
    void audioTrackWrite(byte[],int,int) -> audioTrackWrite
    void audioTrackStart() -> audioTrackStart
    void audioTrackPause() -> audioTrackPause
    void audioTrackRelease() -> audioTrackRelease
    java.nio.ByteBuffer surfaceInit() -> surfaceInit
    void surfaceRender() -> surfaceRender
    void surfaceRelease() -> surfaceRelease
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$0(io.vov.vitamio.MediaPlayer) -> access$0
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$1(io.vov.vitamio.MediaPlayer) -> access$1
    void access$2(io.vov.vitamio.MediaPlayer,boolean) -> access$2
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$3(io.vov.vitamio.MediaPlayer) -> access$3
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$4(io.vov.vitamio.MediaPlayer) -> access$4
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener access$5(io.vov.vitamio.MediaPlayer) -> access$5
    io.vov.vitamio.MediaPlayer$OnErrorListener access$6(io.vov.vitamio.MediaPlayer) -> access$6
    io.vov.vitamio.MediaPlayer$OnInfoListener access$7(io.vov.vitamio.MediaPlayer) -> access$7
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener access$8(io.vov.vitamio.MediaPlayer) -> access$8
io.vov.vitamio.MediaPlayer$EventHandler -> io.vov.vitamio.MediaPlayer$EventHandler:
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.os.Bundle mData -> mData
    io.vov.vitamio.MediaPlayer this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener -> io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener:
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
io.vov.vitamio.MediaPlayer$OnCompletionListener -> io.vov.vitamio.MediaPlayer$OnCompletionListener:
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
io.vov.vitamio.MediaPlayer$OnErrorListener -> io.vov.vitamio.MediaPlayer$OnErrorListener:
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener -> io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener:
    void onFailed() -> onFailed
io.vov.vitamio.MediaPlayer$OnInfoListener -> io.vov.vitamio.MediaPlayer$OnInfoListener:
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
io.vov.vitamio.MediaPlayer$OnPreparedListener -> io.vov.vitamio.MediaPlayer$OnPreparedListener:
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
io.vov.vitamio.MediaPlayer$OnSeekCompleteListener -> io.vov.vitamio.MediaPlayer$OnSeekCompleteListener:
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> onSeekComplete
io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener -> io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener:
    void onSubtitleUpdate(java.lang.String) -> onSubtitleUpdate
    void onSubtitleUpdate(byte[],int,int) -> onSubtitleUpdate
io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener -> io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener:
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
io.vov.vitamio.Metadata -> io.vov.vitamio.Metadata:
    int ANY -> ANY
    int TITLE -> TITLE
    int COMMENT -> COMMENT
    int COPYRIGHT -> COPYRIGHT
    int ALBUM -> ALBUM
    int ARTIST -> ARTIST
    int AUTHOR -> AUTHOR
    int COMPOSER -> COMPOSER
    int GENRE -> GENRE
    int DATE -> DATE
    int DURATION -> DURATION
    int CD_TRACK_NUM -> CD_TRACK_NUM
    int CD_TRACK_MAX -> CD_TRACK_MAX
    int RATING -> RATING
    int ALBUM_ART -> ALBUM_ART
    int VIDEO_FRAME -> VIDEO_FRAME
    int CAPTION -> CAPTION
    int BIT_RATE -> BIT_RATE
    int AUDIO_BIT_RATE -> AUDIO_BIT_RATE
    int VIDEO_BIT_RATE -> VIDEO_BIT_RATE
    int AUDIO_SAMPLE_RATE -> AUDIO_SAMPLE_RATE
    int VIDEO_FRAME_RATE -> VIDEO_FRAME_RATE
    int MIME_TYPE -> MIME_TYPE
    int AUDIO_CODEC -> AUDIO_CODEC
    int VIDEO_CODEC -> VIDEO_CODEC
    int VIDEO_HEIGHT -> VIDEO_HEIGHT
    int VIDEO_WIDTH -> VIDEO_WIDTH
    int NUM_TRACKS -> NUM_TRACKS
    int DRM_CRIPPLED -> DRM_CRIPPLED
    int PAUSE_AVAILABLE -> PAUSE_AVAILABLE
    int SEEK_BACKWARD_AVAILABLE -> SEEK_BACKWARD_AVAILABLE
    int SEEK_FORWARD_AVAILABLE -> SEEK_FORWARD_AVAILABLE
    int SEEK_AVAILABLE -> SEEK_AVAILABLE
    int LAST_SYSTEM -> LAST_SYSTEM
    int FIRST_CUSTOM -> FIRST_CUSTOM
    java.util.Set MATCH_NONE -> MATCH_NONE
    java.util.Set MATCH_ALL -> MATCH_ALL
    int STRING_VAL -> STRING_VAL
    int INTEGER_VAL -> INTEGER_VAL
    int BOOLEAN_VAL -> BOOLEAN_VAL
    int LONG_VAL -> LONG_VAL
    int DOUBLE_VAL -> DOUBLE_VAL
    int TIMED_TEXT_VAL -> TIMED_TEXT_VAL
    int DATE_VAL -> DATE_VAL
    int BYTE_ARRAY_VAL -> BYTE_ARRAY_VAL
    int LAST_TYPE -> LAST_TYPE
    java.lang.String TAG -> TAG
    int kInt32Size -> kInt32Size
    int kMetaHeaderSize -> kMetaHeaderSize
    int kRecordHeaderSize -> kRecordHeaderSize
    int kMetaMarker -> kMetaMarker
    android.os.Parcel mParcel -> mParcel
    java.util.HashMap mKeyToPosMap -> mKeyToPosMap
    boolean scanAllRecords(android.os.Parcel,int) -> scanAllRecords
    boolean parse(android.os.Parcel) -> parse
    java.util.Set keySet() -> keySet
    boolean has(int) -> has
    java.lang.String getString(int) -> getString
    int getInt(int) -> getInt
    boolean getBoolean(int) -> getBoolean
    long getLong(int) -> getLong
    double getDouble(int) -> getDouble
    byte[] getByteArray(int) -> getByteArray
    java.util.Date getDate(int) -> getDate
    io.vov.vitamio.Metadata$TimedText getTimedText(int) -> getTimedText
    int lastSytemId() -> lastSytemId
    int firstCustomId() -> firstCustomId
    int lastType() -> lastType
    boolean checkMetadataId(int) -> checkMetadataId
    void checkType(int,int) -> checkType
io.vov.vitamio.Metadata$TimedText -> io.vov.vitamio.Metadata$TimedText:
    java.util.Date mTime -> mTime
    int mDuration -> mDuration
    java.lang.String mText -> mText
    io.vov.vitamio.Metadata this$0 -> this$0
    java.lang.String toString() -> toString
io.vov.vitamio.NativeReceiver -> io.vov.vitamio.NativeReceiver:
    java.lang.String ACTION_POST_MSG -> ACTION_POST_MSG
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.vov.vitamio.R -> io.vov.vitamio.R:
io.vov.vitamio.R$color -> io.vov.vitamio.R$color:
    int title -> title
    int red -> red
    int blue -> blue
    int green -> green
    int higtlight -> higtlight
    int background -> background
    int durationtext -> durationtext
    int white -> white
    int yellow -> yellow
    int black -> black
io.vov.vitamio.R$drawable -> io.vov.vitamio.R$drawable:
    int arrow_right -> arrow_right
    int logo_youku -> logo_youku
    int video_volumn_bg -> video_volumn_bg
    int mediacontroller_pause02 -> mediacontroller_pause02
    int in_bubble -> in_bubble
    int mediacontroller_pause01 -> mediacontroller_pause01
    int logo_pptv -> logo_pptv
    int contact_list_scroll_pressed -> contact_list_scroll_pressed
    int down_btn_9 -> down_btn_9
    int home_bg_checked -> home_bg_checked
    int down_btn_8 -> down_btn_8
    int sd_bar_bg -> sd_bar_bg
    int down_btn_3 -> down_btn_3
    int mediacontroller_listserver_button -> mediacontroller_listserver_button
    int video_num_bg -> video_num_bg
    int down_btn_2 -> down_btn_2
    int down_btn_1 -> down_btn_1
    int down_btn_0 -> down_btn_0
    int down_btn_7 -> down_btn_7
    int btnplayer_backup -> btnplayer_backup
    int down_btn_6 -> down_btn_6
    int down_btn_5 -> down_btn_5
    int down_btn_4 -> down_btn_4
    int video_online -> video_online
    int mediacontroller_pause_button -> mediacontroller_pause_button
    int alphabet_scroller_bg -> alphabet_scroller_bg
    int logo_qq -> logo_qq
    int video_player_overlay_on -> video_player_overlay_on
    int video_back -> video_back
    int btnplayer -> btnplayer
    int mediacontroller_play_button -> mediacontroller_play_button
    int down_btn_10 -> down_btn_10
    int mediacontroller_seekbar_thumb -> mediacontroller_seekbar_thumb
    int blackscreen -> blackscreen
    int video_player_origin_left_on -> video_player_origin_left_on
    int ic_line -> ic_line
    int mediacontroller_play02 -> mediacontroller_play02
    int mediacontroller_play01 -> mediacontroller_play01
    int home_btn_bg -> home_btn_bg
    int default_thumbnail -> default_thumbnail
    int logo_iqiyi -> logo_iqiyi
    int logo_56 -> logo_56
    int video_player_stretch_expand_on -> video_player_stretch_expand_on
    int mediacontroller_bg -> mediacontroller_bg
    int btnplayer_press -> btnplayer_press
    int video_player_lock_on -> video_player_lock_on
    int video_player_zoom_right_on -> video_player_zoom_right_on
    int video_file -> video_file
    int logo_sohu -> logo_sohu
    int logo_tudou -> logo_tudou
    int mediacontroller_seekbar01 -> mediacontroller_seekbar01
    int mediacontroller_seekbar -> mediacontroller_seekbar
    int mediacontroller_seekbar02 -> mediacontroller_seekbar02
    int logo_cntv -> logo_cntv
    int ic_launcher -> ic_launcher
    int contact_list_scroll_normal -> contact_list_scroll_normal
    int fast_scroller_overlay -> fast_scroller_overlay
    int icon -> icon
    int home_bg_normal -> home_bg_normal
    int logo_letv -> logo_letv
    int video_player_unlock -> video_player_unlock
    int video_num_front -> video_num_front
    int video_brightness_bg -> video_brightness_bg
    int logo_sina -> logo_sina
io.vov.vitamio.R$id -> io.vov.vitamio.R$id:
    int operation_bg -> operation_bg
    int mediacontroller_list_server -> mediacontroller_list_server
    int layout_control_bottom -> layout_control_bottom
    int mediacontroller_time_current -> mediacontroller_time_current
    int operation_errortext -> operation_errortext
    int surface -> surface
    int media_controller_custom -> media_controller_custom
    int mediacontroller_lock -> mediacontroller_lock
    int operation_volume_brightness -> operation_volume_brightness
    int operation_full -> operation_full
    int mediacontroller_pause -> mediacontroller_pause
    int mediacontroller_zoom_button -> mediacontroller_zoom_button
    int layout_overlay -> layout_overlay
    int textView1 -> textView1
    int mediacontroller_file_name -> mediacontroller_file_name
    int times -> times
    int operation_percent -> operation_percent
    int mediacontroller_play_pause -> mediacontroller_play_pause
    int operation_loading -> operation_loading
    int mediacontroller_seekbar -> mediacontroller_seekbar
    int surface_view -> surface_view
    int mediacontroller_time_total -> mediacontroller_time_total
    int mediacontroller_progress -> mediacontroller_progress
    int button1 -> button1
io.vov.vitamio.R$layout -> io.vov.vitamio.R$layout:
    int my_media_controller -> my_media_controller
    int mediaplayer -> mediaplayer
    int videoview -> videoview
    int play_screen -> play_screen
    int mediacontroller -> mediacontroller
io.vov.vitamio.R$raw -> io.vov.vitamio.R$raw:
    int libarm -> libarm
io.vov.vitamio.R$string -> io.vov.vitamio.R$string:
    int version_name -> version_name
    int VideoView_error_button -> VideoView_error_button
    int VideoView_error_title -> VideoView_error_title
    int vitamio_theme_app_name -> vitamio_theme_app_name
    int VideoView_error_text_unknown -> VideoView_error_text_unknown
    int mediacontroller_play_pause -> mediacontroller_play_pause
    int init_decoders -> init_decoders
    int app_name -> app_name
    int VideoView_error_text_invalid_progressive_playback -> VideoView_error_text_invalid_progressive_playback
io.vov.vitamio.R$style -> io.vov.vitamio.R$style:
    int main_tab_bottom -> main_tab_bottom
    int MediaController_SeekBar -> MediaController_SeekBar
    int AppTheme -> AppTheme
    int MediaController_Text -> MediaController_Text
io.vov.vitamio.ThumbnailUtils -> io.vov.vitamio.ThumbnailUtils:
    int OPTIONS_NONE -> OPTIONS_NONE
    int OPTIONS_SCALE_UP -> OPTIONS_SCALE_UP
    int OPTIONS_RECYCLE_INPUT -> OPTIONS_RECYCLE_INPUT
    int TARGET_SIZE_MINI_THUMBNAIL_WIDTH -> TARGET_SIZE_MINI_THUMBNAIL_WIDTH
    int TARGET_SIZE_MINI_THUMBNAIL_HEIGHT -> TARGET_SIZE_MINI_THUMBNAIL_HEIGHT
    int TARGET_SIZE_MICRO_THUMBNAIL_WIDTH -> TARGET_SIZE_MICRO_THUMBNAIL_WIDTH
    int TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT -> TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT
    int MINI_KIND -> MINI_KIND
    int MICRO_KIND -> MICRO_KIND
    android.graphics.Bitmap createVideoThumbnail(android.content.Context,java.lang.String,int) -> createVideoThumbnail
    android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int) -> extractThumbnail
    android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int) -> extractThumbnail
    android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int) -> transform
    int dipToPX(android.content.Context,int) -> dipToPX
io.vov.vitamio.Utils.Utility -> io.vov.vitamio.Utils.Utility:
    java.lang.String SPLIT_TIME_SYMBOL -> SPLIT_TIME_SYMBOL
    android.util.DisplayMetrics getDisplayMetrics(android.app.Activity) -> getDisplayMetrics
    int getScreenWidth(android.app.Activity) -> getScreenWidth
    int getScreenHeight(android.app.Activity) -> getScreenHeight
    float convertDpToPixel(float,android.content.Context) -> convertDpToPixel
    float convertPixelsToDp(float,android.content.Context) -> convertPixelsToDp
    java.lang.String convertHTML(java.lang.String) -> convertHTML
    void CopyStream(java.io.InputStream,java.io.OutputStream) -> CopyStream
    java.lang.String toString(java.io.InputStream) -> toString
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String splitToComponentTimes(long) -> splitToComponentTimes
    java.lang.String getFormatLabel(int) -> getFormatLabel
    java.lang.String[] stringBetween(java.lang.String,java.lang.String,java.lang.String) -> stringBetween
    java.lang.String decodeURIComponent(java.lang.String) -> decodeURIComponent
    java.lang.String getYoutubeContent(java.lang.String) -> getYoutubeContent
io.vov.vitamio.Vitamio -> io.vov.vitamio.Vitamio:
    java.lang.String vitamioPackage -> vitamioPackage
    java.lang.String vitamioLibraryPath -> vitamioLibraryPath
    java.lang.String[] LIBS_CODECS -> LIBS_CODECS
    java.lang.String[] LIBS_PLAYER -> LIBS_PLAYER
    java.lang.String[] LIBS_SCANNER -> LIBS_SCANNER
    java.lang.String[] LIBS_AV -> LIBS_AV
    java.lang.String LIBS_LOCK -> LIBS_LOCK
    int VITAMIO_NOT_SUPPORTED -> VITAMIO_NOT_SUPPORTED
    int VITAMIO_ARMV6 -> VITAMIO_ARMV6
    int VITAMIO_ARMV6_VFP -> VITAMIO_ARMV6_VFP
    int VITAMIO_ARMV7_VFPV3 -> VITAMIO_ARMV7_VFPV3
    int VITAMIO_ARMV7_NEON -> VITAMIO_ARMV7_NEON
    int vitamioType -> vitamioType
    java.lang.String VITAMIO_VERSION_NAME -> VITAMIO_VERSION_NAME
    int VITAMIO_VERSION_CODE -> VITAMIO_VERSION_CODE
    boolean initialize(android.content.Context) -> initialize
    boolean isInitialized(android.content.Context) -> isInitialized
    java.lang.String getVitamioPackage() -> getVitamioPackage
    int getVitamioType() -> getVitamioType
    java.lang.String getLibraryPath() -> getLibraryPath
    java.util.List getRequiredLibs() -> getRequiredLibs
    boolean extractLibs(android.content.Context,int) -> extractLibs
    java.lang.String copyCompressedLib(android.content.Context,int,java.lang.String) -> copyCompressedLib
    boolean native_initializeLibs(java.lang.String,java.lang.String,java.lang.String) -> native_initializeLibs
io.vov.vitamio.Vitamio$VitamioNotCompatibleException -> io.vov.vitamio.Vitamio$VitamioNotCompatibleException:
    long serialVersionUID -> serialVersionUID
io.vov.vitamio.VitamioLicense -> io.vov.vitamio.VitamioLicense:
    java.lang.String LICENSE -> LICENSE
    boolean checkValid() -> checkValid
io.vov.vitamio.activity.InitActivity -> io.vov.vitamio.activity.InitActivity:
    java.lang.String FROM_ME -> FROM_ME
    android.app.ProgressDialog mPD -> mPD
    io.vov.vitamio.activity.InitActivity$UIHandler uiHandler -> uiHandler
    void onCreate(android.os.Bundle) -> onCreate
    android.app.ProgressDialog access$0(io.vov.vitamio.activity.InitActivity) -> access$0
    void access$1(io.vov.vitamio.activity.InitActivity,android.app.ProgressDialog) -> access$1
    io.vov.vitamio.activity.InitActivity$UIHandler access$2(io.vov.vitamio.activity.InitActivity) -> access$2
io.vov.vitamio.activity.InitActivity$1 -> io.vov.vitamio.activity.InitActivity$1:
    io.vov.vitamio.activity.InitActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.vov.vitamio.activity.InitActivity$UIHandler -> io.vov.vitamio.activity.InitActivity$UIHandler:
    java.lang.ref.WeakReference mContext -> mContext
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.http.AndroidHttpClient -> io.vov.vitamio.http.AndroidHttpClient:
    java.lang.ThreadLocal sThreadBlocked -> sThreadBlocked
    org.apache.http.HttpRequestInterceptor sThreadCheckInterceptor -> sThreadCheckInterceptor
    org.apache.http.client.HttpClient delegate -> delegate
    io.vov.vitamio.http.AndroidHttpClient newInstance(java.lang.String,int) -> newInstance
    void close() -> close
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.ThreadLocal access$0() -> access$0
    org.apache.http.HttpRequestInterceptor access$1() -> access$1
io.vov.vitamio.http.AndroidHttpClient$1 -> io.vov.vitamio.http.AndroidHttpClient$1:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
io.vov.vitamio.http.AndroidHttpClient$2 -> io.vov.vitamio.http.AndroidHttpClient$2:
    io.vov.vitamio.http.AndroidHttpClient this$0 -> this$0
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
io.vov.vitamio.http.HTTPServer -> io.vov.vitamio.http.HTTPServer:
    java.lang.String getResponse(java.lang.String,boolean,boolean) -> getResponse
    java.lang.String getStreamHdviet(java.lang.String,boolean,boolean) -> getStreamHdviet
    java.lang.String md5(java.lang.String) -> md5
    byte[] md5(byte[]) -> md5
io.vov.vitamio.widget.CenterLayout -> io.vov.vitamio.widget.CenterLayout:
    int mPaddingLeft -> mPaddingLeft
    int mPaddingRight -> mPaddingRight
    int mPaddingTop -> mPaddingTop
    int mPaddingBottom -> mPaddingBottom
    int mWidth -> mWidth
    int mHeight -> mHeight
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
io.vov.vitamio.widget.CenterLayout$LayoutParams -> io.vov.vitamio.widget.CenterLayout$LayoutParams:
    int x -> x
    int y -> y
io.vov.vitamio.widget.MediaController -> io.vov.vitamio.widget.MediaController:
    io.vov.vitamio.widget.MediaController$MediaPlayerControl mPlayer -> mPlayer
    android.content.Context mContext -> mContext
    android.widget.PopupWindow mWindow -> mWindow
    int mAnimStyle -> mAnimStyle
    android.view.View mAnchor -> mAnchor
    android.view.View mRoot -> mRoot
    android.widget.ProgressBar mProgress -> mProgress
    android.widget.TextView mEndTime -> mEndTime
    android.widget.TextView mCurrentTime -> mCurrentTime
    android.widget.TextView mFileName -> mFileName
    io.vov.vitamio.widget.OutlineTextView mInfoView -> mInfoView
    java.lang.String mTitle -> mTitle
    long mDuration -> mDuration
    boolean mShowing -> mShowing
    boolean mDragging -> mDragging
    boolean mInstantSeeking -> mInstantSeeking
    boolean mIsPlayLiveStream -> mIsPlayLiveStream
    int sDefaultTimeout -> sDefaultTimeout
    int FADE_OUT -> FADE_OUT
    int SHOW_PROGRESS -> SHOW_PROGRESS
    int VIDEO_LAYOUT -> VIDEO_LAYOUT
    boolean mFromXml -> mFromXml
    android.widget.ImageButton mPauseButton -> mPauseButton
    android.widget.ImageButton mLockButton -> mLockButton
    android.widget.ImageButton mLayoutButton -> mLayoutButton
    android.widget.Button mListServerButton -> mListServerButton
    android.widget.RelativeLayout mLayoutControlBottom -> mLayoutControlBottom
    android.media.AudioManager mAM -> mAM
    io.vov.vitamio.widget.MediaController$MediaControlListener mediaControlListener -> mediaControlListener
    io.vov.vitamio.widget.MediaController$OnShownListener mShownListener -> mShownListener
    io.vov.vitamio.widget.MediaController$OnHiddenListener mHiddenListener -> mHiddenListener
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector mControlGesture -> mControlGesture
    android.view.View$OnClickListener mPauseListener -> mPauseListener
    android.view.View$OnClickListener mListServerListener -> mListServerListener
    android.view.View$OnClickListener mLockListener -> mLockListener
    android.view.View$OnClickListener mZoomButtonListener -> mZoomButtonListener
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> mSeekListener
    boolean initController(android.content.Context) -> initController
    void setChooseServerListener(io.vov.vitamio.widget.MediaController$MediaControlListener) -> setChooseServerListener
    void setIsPlayLiveStream(boolean) -> setIsPlayLiveStream
    void onFinishInflate() -> onFinishInflate
    void initFloatingWindow() -> initFloatingWindow
    void setAnchorView(android.view.View) -> setAnchorView
    android.view.View makeControllerView() -> makeControllerView
    void initControllerView(android.view.View) -> initControllerView
    void setMediaPlayer(io.vov.vitamio.widget.MediaController$MediaPlayerControl) -> setMediaPlayer
    void setInstantSeeking(boolean) -> setInstantSeeking
    void show() -> show
    void setFileName(java.lang.String) -> setFileName
    void setInfoView(io.vov.vitamio.widget.OutlineTextView) -> setInfoView
    void disableUnsupportedButtons() -> disableUnsupportedButtons
    void setAnimationStyle(int) -> setAnimationStyle
    void show(int) -> show
    boolean isShowing() -> isShowing
    void hide() -> hide
    void setOnShownListener(io.vov.vitamio.widget.MediaController$OnShownListener) -> setOnShownListener
    void setOnHiddenListener(io.vov.vitamio.widget.MediaController$OnHiddenListener) -> setOnHiddenListener
    long setProgress() -> setProgress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updateLockControl(boolean) -> updateLockControl
    void updatePausePlay() -> updatePausePlay
    void doPauseResume() -> doPauseResume
    void setEnabled(boolean) -> setEnabled
    long access$0(io.vov.vitamio.widget.MediaController) -> access$0
    boolean access$1(io.vov.vitamio.widget.MediaController) -> access$1
    boolean access$2(io.vov.vitamio.widget.MediaController) -> access$2
    void access$3(io.vov.vitamio.widget.MediaController) -> access$3
    void access$4(io.vov.vitamio.widget.MediaController) -> access$4
    io.vov.vitamio.widget.MediaController$MediaControlListener access$5(io.vov.vitamio.widget.MediaController) -> access$5
    android.widget.RelativeLayout access$6(io.vov.vitamio.widget.MediaController) -> access$6
    void access$7(io.vov.vitamio.widget.MediaController,boolean) -> access$7
    int access$8(io.vov.vitamio.widget.MediaController) -> access$8
    void access$9(io.vov.vitamio.widget.MediaController,int) -> access$9
    android.widget.ImageButton access$10(io.vov.vitamio.widget.MediaController) -> access$10
    io.vov.vitamio.widget.MediaController$MediaPlayerControl access$11(io.vov.vitamio.widget.MediaController) -> access$11
    void access$12(io.vov.vitamio.widget.MediaController,boolean) -> access$12
    android.os.Handler access$13(io.vov.vitamio.widget.MediaController) -> access$13
    boolean access$14(io.vov.vitamio.widget.MediaController) -> access$14
    android.media.AudioManager access$15(io.vov.vitamio.widget.MediaController) -> access$15
    io.vov.vitamio.widget.OutlineTextView access$16(io.vov.vitamio.widget.MediaController) -> access$16
    long access$17(io.vov.vitamio.widget.MediaController) -> access$17
    android.widget.TextView access$18(io.vov.vitamio.widget.MediaController) -> access$18
io.vov.vitamio.widget.MediaController$1 -> io.vov.vitamio.widget.MediaController$1:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.widget.MediaController$2 -> io.vov.vitamio.widget.MediaController$2:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$3 -> io.vov.vitamio.widget.MediaController$3:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$4 -> io.vov.vitamio.widget.MediaController$4:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$5 -> io.vov.vitamio.widget.MediaController$5:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$6 -> io.vov.vitamio.widget.MediaController$6:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
io.vov.vitamio.widget.MediaController$ControlGesture -> io.vov.vitamio.widget.MediaController$ControlGesture:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
io.vov.vitamio.widget.MediaController$MediaControlListener -> io.vov.vitamio.widget.MediaController$MediaControlListener:
    void startChooseServer() -> startChooseServer
io.vov.vitamio.widget.MediaController$MediaPlayerControl -> io.vov.vitamio.widget.MediaController$MediaPlayerControl:
    void start() -> start
    void pause() -> pause
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    boolean canPause() -> canPause
    boolean canSeekBackward() -> canSeekBackward
    boolean canSeekForward() -> canSeekForward
    void onLayoutScreen(int) -> onLayoutScreen
io.vov.vitamio.widget.MediaController$OnHiddenListener -> io.vov.vitamio.widget.MediaController$OnHiddenListener:
    void onHidden() -> onHidden
io.vov.vitamio.widget.MediaController$OnShownListener -> io.vov.vitamio.widget.MediaController$OnShownListener:
    void onShown() -> onShown
io.vov.vitamio.widget.OutlineTextView -> io.vov.vitamio.widget.OutlineTextView:
    android.text.TextPaint mTextPaint -> mTextPaint
    android.text.TextPaint mTextPaintOutline -> mTextPaintOutline
    java.lang.String mText -> mText
    int mAscent -> mAscent
    float mBorderSize -> mBorderSize
    int mBorderColor -> mBorderColor
    int mColor -> mColor
    float mSpacingMult -> mSpacingMult
    float mSpacingAdd -> mSpacingAdd
    boolean mIncludePad -> mIncludePad
    void initPaint() -> initPaint
    void setText(java.lang.String) -> setText
    void setTextSize(float) -> setTextSize
    void setTextColor(int) -> setTextColor
    void setShadowLayer(float,float,float,int) -> setShadowLayer
    void setTypeface(android.graphics.Typeface,int) -> setTypeface
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
io.vov.vitamio.widget.PlayerActivity -> io.vov.vitamio.widget.PlayerActivity:
    java.lang.String TAG -> TAG
    int mVideoWidth -> mVideoWidth
    int mVideoHeight -> mVideoHeight
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.view.SurfaceView mPreview -> mPreview
    android.view.SurfaceHolder holder -> holder
    java.lang.String path -> path
    boolean mIsVideoSizeKnown -> mIsVideoSizeKnown
    boolean mIsVideoReadyToBePlayed -> mIsVideoReadyToBePlayed
    void onCreate(android.os.Bundle) -> onCreate
    void playVideo() -> playVideo
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void releaseMediaPlayer() -> releaseMediaPlayer
    void doCleanUp() -> doCleanUp
    void startVideoPlayback() -> startVideoPlayback
io.vov.vitamio.widget.VideoPlayerActivity -> io.vov.vitamio.widget.VideoPlayerActivity:
    java.lang.String mPath -> mPath
    java.lang.String mTitle -> mTitle
    io.vov.vitamio.widget.VideoView mVideoView -> mVideoView
    android.view.View mVolumeBrightnessLayout -> mVolumeBrightnessLayout
    android.widget.ImageView mOperationBg -> mOperationBg
    android.widget.ImageView mOperationPercent -> mOperationPercent
    android.media.AudioManager mAudioManager -> mAudioManager
    int mMaxVolume -> mMaxVolume
    int mVolume -> mVolume
    float mBrightness -> mBrightness
    int mLayout -> mLayout
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    io.vov.vitamio.widget.MediaController mMediaController -> mMediaController
    android.os.Handler mDismissHandler -> mDismissHandler
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void endGesture() -> endGesture
    void taskOnDoubleTap() -> taskOnDoubleTap
    void taskSlide(android.view.MotionEvent,android.view.MotionEvent) -> taskSlide
    void onVolumeSlide(float) -> onVolumeSlide
    void onBrightnessSlide(float) -> onBrightnessSlide
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
    android.view.View access$0(io.vov.vitamio.widget.VideoPlayerActivity) -> access$0
    io.vov.vitamio.widget.VideoView access$1(io.vov.vitamio.widget.VideoPlayerActivity) -> access$1
io.vov.vitamio.widget.VideoPlayerActivity$1 -> io.vov.vitamio.widget.VideoPlayerActivity$1:
    io.vov.vitamio.widget.VideoPlayerActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.widget.VideoPlayerActivity$GetDataYoutube -> io.vov.vitamio.widget.VideoPlayerActivity$GetDataYoutube:
    io.vov.vitamio.widget.VideoPlayerActivity this$0 -> this$0
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.vov.vitamio.widget.VideoPlayerActivity$MyGestureListener -> io.vov.vitamio.widget.VideoPlayerActivity$MyGestureListener:
    boolean downInAreaVideoView -> downInAreaVideoView
    io.vov.vitamio.widget.VideoPlayerActivity this$0 -> this$0
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
io.vov.vitamio.widget.VideoView -> io.vov.vitamio.widget.VideoView:
    android.net.Uri mUri -> mUri
    long mDuration -> mDuration
    int STATE_ERROR -> STATE_ERROR
    int STATE_IDLE -> STATE_IDLE
    int STATE_PREPARING -> STATE_PREPARING
    int STATE_PREPARED -> STATE_PREPARED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYBACK_COMPLETED -> STATE_PLAYBACK_COMPLETED
    int STATE_SUSPEND -> STATE_SUSPEND
    int STATE_RESUME -> STATE_RESUME
    int STATE_SUSPEND_UNSUPPORTED -> STATE_SUSPEND_UNSUPPORTED
    int mCurrentState -> mCurrentState
    int mTargetState -> mTargetState
    float mAspectRatio -> mAspectRatio
    int mVideoLayout -> mVideoLayout
    int VIDEO_LAYOUT_ORIGIN -> VIDEO_LAYOUT_ORIGIN
    int VIDEO_LAYOUT_SCALE -> VIDEO_LAYOUT_SCALE
    int VIDEO_LAYOUT_STRETCH -> VIDEO_LAYOUT_STRETCH
    int VIDEO_LAYOUT_ZOOM -> VIDEO_LAYOUT_ZOOM
    boolean isFirstBuffer -> isFirstBuffer
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    int mVideoWidth -> mVideoWidth
    int mVideoHeight -> mVideoHeight
    float mVideoAspectRatio -> mVideoAspectRatio
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    io.vov.vitamio.widget.MediaController mMediaController -> mMediaController
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> mOnCompletionListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> mOnPreparedListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> mOnErrorListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> mOnSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener -> mOnSubtitleUpdateListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> mOnInfoListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> mOnBufferingUpdateListener
    int mCurrentBufferPercentage -> mCurrentBufferPercentage
    long mSeekWhenPrepared -> mSeekWhenPrepared
    boolean mCanPause -> mCanPause
    boolean mCanSeekBack -> mCanSeekBack
    boolean mCanSeekForward -> mCanSeekForward
    android.content.Context mContext -> mContext
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener -> mSizeChangedListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mPreparedListener -> mPreparedListener
    io.vov.vitamio.MediaPlayer$OnCompletionListener mCompletionListener -> mCompletionListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mErrorListener -> mErrorListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener -> mBufferingUpdateListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mInfoListener -> mInfoListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mSeekCompleteListener -> mSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mSubtitleUpdateListener -> mSubtitleUpdateListener
    android.view.SurfaceHolder$Callback mSHCallback -> mSHCallback
    void onMeasure(int,int) -> onMeasure
    void setVideoLayout(int,float) -> setVideoLayout
    int getVideoLayout() -> getVideoLayout
    void initVideoView(android.content.Context) -> initVideoView
    boolean isValid() -> isValid
    void setVideoPath(java.lang.String) -> setVideoPath
    void setVideoURI(android.net.Uri) -> setVideoURI
    void stopPlayback() -> stopPlayback
    void openVideo() -> openVideo
    void setMediaController(io.vov.vitamio.widget.MediaController) -> setMediaController
    void attachMediaController() -> attachMediaController
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnSubtitleUpdateListener(io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener) -> setOnSubtitleUpdateListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void release(boolean) -> release
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void toggleControl() -> toggleControl
    void toggleMediaControlsVisiblity() -> toggleMediaControlsVisiblity
    void start() -> start
    void pause() -> pause
    void suspend() -> suspend
    void resume() -> resume
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    void setVolume(float,float) -> setVolume
    int getVideoWidth() -> getVideoWidth
    int getVideoHeight() -> getVideoHeight
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoQuality(int) -> setVideoQuality
    void setBufferSize(int) -> setBufferSize
    boolean isBuffering() -> isBuffering
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    java.lang.String getMetaEncoding() -> getMetaEncoding
    java.util.HashMap getAudioTrackMap(java.lang.String) -> getAudioTrackMap
    int getAudioTrack() -> getAudioTrack
    void setAudioTrack(int) -> setAudioTrack
    void setSubShown(boolean) -> setSubShown
    void setSubEncoding(java.lang.String) -> setSubEncoding
    int getSubLocation() -> getSubLocation
    void setSubPath(java.lang.String) -> setSubPath
    java.lang.String getSubPath() -> getSubPath
    void setSubTrack(int) -> setSubTrack
    int getSubTrack() -> getSubTrack
    java.util.HashMap getSubTrackMap(java.lang.String) -> getSubTrackMap
    boolean isInPlaybackState() -> isInPlaybackState
    boolean canPause() -> canPause
    boolean canSeekBackward() -> canSeekBackward
    boolean canSeekForward() -> canSeekForward
    void onLayoutScreen(int) -> onLayoutScreen
    void access$0(io.vov.vitamio.widget.VideoView,int) -> access$0
    void access$1(io.vov.vitamio.widget.VideoView,int) -> access$1
    void access$2(io.vov.vitamio.widget.VideoView,float) -> access$2
    int access$3(io.vov.vitamio.widget.VideoView) -> access$3
    int access$4(io.vov.vitamio.widget.VideoView) -> access$4
    int access$5(io.vov.vitamio.widget.VideoView) -> access$5
    float access$6(io.vov.vitamio.widget.VideoView) -> access$6
    void access$7(io.vov.vitamio.widget.VideoView,int) -> access$7
    void access$8(io.vov.vitamio.widget.VideoView,int) -> access$8
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$9(io.vov.vitamio.widget.VideoView) -> access$9
    io.vov.vitamio.MediaPlayer access$10(io.vov.vitamio.widget.VideoView) -> access$10
    io.vov.vitamio.widget.MediaController access$11(io.vov.vitamio.widget.VideoView) -> access$11
    long access$12(io.vov.vitamio.widget.VideoView) -> access$12
    int access$13(io.vov.vitamio.widget.VideoView) -> access$13
    int access$14(io.vov.vitamio.widget.VideoView) -> access$14
    int access$15(io.vov.vitamio.widget.VideoView) -> access$15
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$16(io.vov.vitamio.widget.VideoView) -> access$16
    io.vov.vitamio.MediaPlayer$OnErrorListener access$17(io.vov.vitamio.widget.VideoView) -> access$17
    android.content.Context access$18(io.vov.vitamio.widget.VideoView) -> access$18
    void access$19(io.vov.vitamio.widget.VideoView,int) -> access$19
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$20(io.vov.vitamio.widget.VideoView) -> access$20
    io.vov.vitamio.MediaPlayer$OnInfoListener access$21(io.vov.vitamio.widget.VideoView) -> access$21
    boolean access$22(io.vov.vitamio.widget.VideoView) -> access$22
    void access$23(io.vov.vitamio.widget.VideoView,boolean) -> access$23
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$24(io.vov.vitamio.widget.VideoView) -> access$24
    io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener access$25(io.vov.vitamio.widget.VideoView) -> access$25
    void access$26(io.vov.vitamio.widget.VideoView,int) -> access$26
    void access$27(io.vov.vitamio.widget.VideoView,int) -> access$27
    void access$28(io.vov.vitamio.widget.VideoView,android.view.SurfaceHolder) -> access$28
    int access$29(io.vov.vitamio.widget.VideoView) -> access$29
    android.view.SurfaceHolder access$30(io.vov.vitamio.widget.VideoView) -> access$30
    void access$31(io.vov.vitamio.widget.VideoView) -> access$31
io.vov.vitamio.widget.VideoView$1 -> io.vov.vitamio.widget.VideoView$1:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
io.vov.vitamio.widget.VideoView$2 -> io.vov.vitamio.widget.VideoView$2:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
io.vov.vitamio.widget.VideoView$3 -> io.vov.vitamio.widget.VideoView$3:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
io.vov.vitamio.widget.VideoView$4 -> io.vov.vitamio.widget.VideoView$4:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
    io.vov.vitamio.widget.VideoView access$0(io.vov.vitamio.widget.VideoView$4) -> access$0
io.vov.vitamio.widget.VideoView$4$1 -> io.vov.vitamio.widget.VideoView$4$1:
    io.vov.vitamio.widget.VideoView$4 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.vov.vitamio.widget.VideoView$5 -> io.vov.vitamio.widget.VideoView$5:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
io.vov.vitamio.widget.VideoView$6 -> io.vov.vitamio.widget.VideoView$6:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
io.vov.vitamio.widget.VideoView$7 -> io.vov.vitamio.widget.VideoView$7:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> onSeekComplete
io.vov.vitamio.widget.VideoView$8 -> io.vov.vitamio.widget.VideoView$8:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onSubtitleUpdate(byte[],int,int) -> onSubtitleUpdate
    void onSubtitleUpdate(java.lang.String) -> onSubtitleUpdate
io.vov.vitamio.widget.VideoView$9 -> io.vov.vitamio.widget.VideoView$9:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    org.acra.log.ACRALog log -> log
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    java.lang.String PREF_LAST_VERSION_NR -> PREF_LAST_VERSION_NR
    android.app.Application mApplication -> mApplication
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    org.acra.ErrorReporter errorReporterSingleton -> errorReporterSingleton
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    org.acra.ACRAConfiguration configProxy -> configProxy
    void init(android.app.Application) -> init
    org.acra.ErrorReporter getErrorReporter() -> getErrorReporter
    boolean shouldDisableACRA(android.content.SharedPreferences) -> shouldDisableACRA
    void checkCrashResources() -> checkCrashResources
    android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    org.acra.ACRAConfiguration getConfig() -> getConfig
    void setConfig(org.acra.ACRAConfiguration) -> setConfig
    org.acra.ACRAConfiguration getNewDefaultConfig(android.app.Application) -> getNewDefaultConfig
    boolean isDebuggable() -> isDebuggable
    android.app.Application getApplication() -> getApplication
    void setLog(org.acra.log.ACRALog) -> setLog
    boolean access$000(android.content.SharedPreferences) -> access$000
org.acra.ACRA$1 -> org.acra.ACRA$1:
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRA$2 -> org.acra.ACRA$2:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> $SwitchMap$org$acra$ReportingInteractionMode
org.acra.ACRAConfiguration -> org.acra.ACRAConfiguration:
    java.lang.String[] mAdditionalDropboxTags -> mAdditionalDropboxTags
    java.lang.String[] mAdditionalSharedPreferences -> mAdditionalSharedPreferences
    java.lang.Integer mConnectionTimeout -> mConnectionTimeout
    org.acra.ReportField[] mCustomReportContent -> mCustomReportContent
    java.lang.Boolean mDeleteUnapprovedReportsOnApplicationStart -> mDeleteUnapprovedReportsOnApplicationStart
    java.lang.Boolean mDeleteOldUnsentReportsOnApplicationStart -> mDeleteOldUnsentReportsOnApplicationStart
    java.lang.Integer mDropboxCollectionMinutes -> mDropboxCollectionMinutes
    java.lang.Boolean mForceCloseDialogAfterToast -> mForceCloseDialogAfterToast
    java.lang.String mFormKey -> mFormKey
    java.lang.String mFormUri -> mFormUri
    java.lang.String mFormUriBasicAuthLogin -> mFormUriBasicAuthLogin
    java.lang.String mFormUriBasicAuthPassword -> mFormUriBasicAuthPassword
    java.lang.Boolean mIncludeDropboxSystemTags -> mIncludeDropboxSystemTags
    java.lang.String[] mLogcatArguments -> mLogcatArguments
    java.lang.String mMailTo -> mMailTo
    java.lang.Integer mMaxNumberOfRequestRetries -> mMaxNumberOfRequestRetries
    org.acra.ReportingInteractionMode mMode -> mMode
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    java.lang.Integer mResDialogCommentPrompt -> mResDialogCommentPrompt
    java.lang.Integer mResDialogEmailPrompt -> mResDialogEmailPrompt
    java.lang.Integer mResDialogIcon -> mResDialogIcon
    java.lang.Integer mResDialogOkToast -> mResDialogOkToast
    java.lang.Integer mResDialogText -> mResDialogText
    java.lang.Integer mResDialogTitle -> mResDialogTitle
    java.lang.Integer mResNotifIcon -> mResNotifIcon
    java.lang.Integer mResNotifText -> mResNotifText
    java.lang.Integer mResNotifTickerText -> mResNotifTickerText
    java.lang.Integer mResNotifTitle -> mResNotifTitle
    java.lang.Integer mResToastText -> mResToastText
    java.lang.Integer mSharedPreferenceMode -> mSharedPreferenceMode
    java.lang.String mSharedPreferenceName -> mSharedPreferenceName
    java.lang.Integer mSocketTimeout -> mSocketTimeout
    java.lang.Boolean mLogcatFilterByPid -> mLogcatFilterByPid
    java.lang.Boolean mSendReportsInDevMode -> mSendReportsInDevMode
    java.lang.String[] mExcludeMatchingSharedPreferencesKeys -> mExcludeMatchingSharedPreferencesKeys
    java.lang.String mApplicationLogFile -> mApplicationLogFile
    java.lang.Integer mApplicationLogFileLines -> mApplicationLogFileLines
    java.lang.String mGoogleFormUrlFormat -> mGoogleFormUrlFormat
    java.lang.Boolean mDisableSSLCertValidation -> mDisableSSLCertValidation
    void setAdditionalDropboxTags(java.lang.String[]) -> setAdditionalDropboxTags
    void setAdditionalSharedPreferences(java.lang.String[]) -> setAdditionalSharedPreferences
    void setConnectionTimeout(java.lang.Integer) -> setConnectionTimeout
    void setCustomReportContent(org.acra.ReportField[]) -> setCustomReportContent
    void setDeleteUnapprovedReportsOnApplicationStart(java.lang.Boolean) -> setDeleteUnapprovedReportsOnApplicationStart
    void setDeleteOldUnsentReportsOnApplicationStart(java.lang.Boolean) -> setDeleteOldUnsentReportsOnApplicationStart
    void setDropboxCollectionMinutes(java.lang.Integer) -> setDropboxCollectionMinutes
    void setForceCloseDialogAfterToast(java.lang.Boolean) -> setForceCloseDialogAfterToast
    void setFormKey(java.lang.String) -> setFormKey
    void setFormUri(java.lang.String) -> setFormUri
    void setFormUriBasicAuthLogin(java.lang.String) -> setFormUriBasicAuthLogin
    void setFormUriBasicAuthPassword(java.lang.String) -> setFormUriBasicAuthPassword
    void setIncludeDropboxSystemTags(java.lang.Boolean) -> setIncludeDropboxSystemTags
    void setLogcatArguments(java.lang.String[]) -> setLogcatArguments
    void setMailTo(java.lang.String) -> setMailTo
    void setMaxNumberOfRequestRetries(java.lang.Integer) -> setMaxNumberOfRequestRetries
    void setMode(org.acra.ReportingInteractionMode) -> setMode
    void setResDialogCommentPrompt(int) -> setResDialogCommentPrompt
    void setResDialogEmailPrompt(int) -> setResDialogEmailPrompt
    void setResDialogIcon(int) -> setResDialogIcon
    void setResDialogOkToast(int) -> setResDialogOkToast
    void setResDialogText(int) -> setResDialogText
    void setResDialogTitle(int) -> setResDialogTitle
    void setResNotifIcon(int) -> setResNotifIcon
    void setResNotifText(int) -> setResNotifText
    void setResNotifTickerText(int) -> setResNotifTickerText
    void setResNotifTitle(int) -> setResNotifTitle
    void setResToastText(int) -> setResToastText
    void setSharedPreferenceMode(java.lang.Integer) -> setSharedPreferenceMode
    void setSharedPreferenceName(java.lang.String) -> setSharedPreferenceName
    void setSocketTimeout(java.lang.Integer) -> setSocketTimeout
    void setLogcatFilterByPid(java.lang.Boolean) -> setLogcatFilterByPid
    void setSendReportsInDevMode(java.lang.Boolean) -> setSendReportsInDevMode
    void setExcludeMatchingSharedPreferencesKeys(java.lang.String[]) -> setExcludeMatchingSharedPreferencesKeys
    void setApplicationLogFile(java.lang.String) -> setApplicationLogFile
    void setApplicationLogFileLines(int) -> setApplicationLogFileLines
    void setDisableSSLCertValidation(boolean) -> setDisableSSLCertValidation
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    java.lang.Class annotationType() -> annotationType
    int connectionTimeout() -> connectionTimeout
    org.acra.ReportField[] customReportContent() -> customReportContent
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String formKey() -> formKey
    java.lang.String formUri() -> formUri
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String mailTo() -> mailTo
    int maxNumberOfRequestRetries() -> maxNumberOfRequestRetries
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    int sharedPreferencesMode() -> sharedPreferencesMode
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int socketTimeout() -> socketTimeout
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    java.lang.String googleFormUrlFormat() -> googleFormUrlFormat
    boolean disableSSLCertValidation() -> disableSSLCertValidation
org.acra.ACRAConfigurationException -> org.acra.ACRAConfigurationException:
    long serialVersionUID -> serialVersionUID
org.acra.ACRAConstants -> org.acra.ACRAConstants:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    java.lang.String APPROVED_SUFFIX -> APPROVED_SUFFIX
    java.lang.String SILENT_SUFFIX -> SILENT_SUFFIX
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    java.lang.String EXTRA_REPORT_FILE_NAME -> EXTRA_REPORT_FILE_NAME
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    int TOAST_WAIT_DURATION -> TOAST_WAIT_DURATION
    java.lang.String NULL_VALUE -> NULL_VALUE
    boolean DEFAULT_FORCE_CLOSE_DIALOG_AFTER_TOAST -> DEFAULT_FORCE_CLOSE_DIALOG_AFTER_TOAST
    int DEFAULT_MAX_NUMBER_OF_REQUEST_RETRIES -> DEFAULT_MAX_NUMBER_OF_REQUEST_RETRIES
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_CONNECTION_TIMEOUT -> DEFAULT_CONNECTION_TIMEOUT
    boolean DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START
    boolean DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START
    int DEFAULT_DROPBOX_COLLECTION_MINUTES -> DEFAULT_DROPBOX_COLLECTION_MINUTES
    boolean DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS -> DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS
    int DEFAULT_SHARED_PREFERENCES_MODE -> DEFAULT_SHARED_PREFERENCES_MODE
    int DEFAULT_NOTIFICATION_ICON -> DEFAULT_NOTIFICATION_ICON
    int DEFAULT_DIALOG_ICON -> DEFAULT_DIALOG_ICON
    int DEFAULT_RES_VALUE -> DEFAULT_RES_VALUE
    java.lang.String DEFAULT_STRING_VALUE -> DEFAULT_STRING_VALUE
    int DEFAULT_LOGCAT_LINES -> DEFAULT_LOGCAT_LINES
    int DEFAULT_BUFFER_SIZE_IN_BYTES -> DEFAULT_BUFFER_SIZE_IN_BYTES
    boolean DEFAULT_LOGCAT_FILTER_BY_PID -> DEFAULT_LOGCAT_FILTER_BY_PID
    boolean DEFAULT_SEND_REPORTS_IN_DEV_MODE -> DEFAULT_SEND_REPORTS_IN_DEV_MODE
    java.lang.String DEFAULT_APPLICATION_LOGFILE -> DEFAULT_APPLICATION_LOGFILE
    int DEFAULT_APPLICATION_LOGFILE_LINES -> DEFAULT_APPLICATION_LOGFILE_LINES
    java.lang.String DEFAULT_GOOGLE_FORM_URL_FORMAT -> DEFAULT_GOOGLE_FORM_URL_FORMAT
    boolean DEFAULT_DISABLE_SSL_CERT_VALIDATION -> DEFAULT_DISABLE_SSL_CERT_VALIDATION
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    java.lang.String STATE_EMAIL -> STATE_EMAIL
    java.lang.String STATE_COMMENT -> STATE_COMMENT
    android.content.SharedPreferences prefs -> prefs
    android.widget.EditText userComment -> userComment
    android.widget.EditText userEmail -> userEmail
    java.lang.String mReportFileName -> mReportFileName
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void cancelNotification() -> cancelNotification
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    android.widget.EditText access$000(org.acra.CrashReportDialog) -> access$000
    android.content.SharedPreferences access$100(org.acra.CrashReportDialog) -> access$100
    android.widget.EditText access$200(org.acra.CrashReportDialog) -> access$200
org.acra.CrashReportDialog$1 -> org.acra.CrashReportDialog$1:
    org.acra.CrashReportDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
org.acra.CrashReportDialog$2 -> org.acra.CrashReportDialog$2:
    org.acra.CrashReportDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
org.acra.CrashReportDialog$3 -> org.acra.CrashReportDialog$3:
    android.widget.ScrollView val$scroll -> val$scroll
    org.acra.CrashReportDialog this$0 -> this$0
    void run() -> run
org.acra.CrashReportFileNameParser -> org.acra.CrashReportFileNameParser:
    boolean isSilent(java.lang.String) -> isSilent
    boolean isApproved(java.lang.String) -> isApproved
org.acra.CrashReportFinder -> org.acra.CrashReportFinder:
    android.content.Context context -> context
    java.lang.String[] getCrashReportFiles() -> getCrashReportFiles
org.acra.CrashReportFinder$1 -> org.acra.CrashReportFinder$1:
    org.acra.CrashReportFinder this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
org.acra.CrashReportPersister -> org.acra.CrashReportPersister:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    android.content.Context context -> context
    org.acra.collector.CrashReportData load(java.lang.String) -> load
    void store(org.acra.collector.CrashReportData,java.lang.String) -> store
    boolean isEbcdic(java.io.BufferedInputStream) -> isEbcdic
    org.acra.collector.CrashReportData load(java.io.Reader) -> load
    void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> dumpString
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    boolean enabled -> enabled
    android.content.Context mContext -> mContext
    android.content.SharedPreferences prefs -> prefs
    java.util.List mReportSenders -> mReportSenders
    org.acra.collector.CrashReportDataFactory crashReportDataFactory -> crashReportDataFactory
    org.acra.CrashReportFileNameParser fileNameParser -> fileNameParser
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> mDfltExceptionHandler
    java.lang.Thread brokenThread -> brokenThread
    java.lang.Throwable unhandledThrowable -> unhandledThrowable
    boolean toastWaitEnded -> toastWaitEnded
    org.acra.ErrorReporter getInstance() -> getInstance
    void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    void addReportSender(org.acra.sender.ReportSender) -> addReportSender
    void removeReportSender(org.acra.sender.ReportSender) -> removeReportSender
    void removeReportSenders(java.lang.Class) -> removeReportSenders
    void removeAllReportSenders() -> removeAllReportSenders
    void setReportSender(org.acra.sender.ReportSender) -> setReportSender
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void endApplication() -> endApplication
    void handleSilentException(java.lang.Throwable) -> handleSilentException
    void setEnabled(boolean) -> setEnabled
    org.acra.SendWorker startSendingReports(boolean,boolean) -> startSendingReports
    void deletePendingReports() -> deletePendingReports
    void checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    void deletePendingNonApprovedReports(boolean) -> deletePendingNonApprovedReports
    void handleException(java.lang.Throwable,boolean) -> handleException
    void handleException(java.lang.Throwable) -> handleException
    void handleException(java.lang.Throwable,org.acra.ReportingInteractionMode,boolean,boolean) -> handleException
    void notifyDialog(java.lang.String) -> notifyDialog
    void notifySendReport(java.lang.String) -> notifySendReport
    java.lang.String getReportFileName(org.acra.collector.CrashReportData) -> getReportFileName
    void saveCrashReportFile(java.lang.String,org.acra.collector.CrashReportData) -> saveCrashReportFile
    java.lang.String getLatestNonSilentReport(java.lang.String[]) -> getLatestNonSilentReport
    void deletePendingReports(boolean,boolean,int) -> deletePendingReports
    boolean containsOnlySilentOrApprovedReports(java.lang.String[]) -> containsOnlySilentOrApprovedReports
    void setDefaultReportSenders() -> setDefaultReportSenders
    android.content.Context access$000(org.acra.ErrorReporter) -> access$000
    boolean access$102(boolean) -> access$102
    boolean access$100() -> access$100
    void access$200(org.acra.ErrorReporter) -> access$200
org.acra.ErrorReporter$1 -> org.acra.ErrorReporter$1:
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$2 -> org.acra.ErrorReporter$2:
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$3 -> org.acra.ErrorReporter$3:
    org.acra.SendWorker val$worker -> val$worker
    boolean val$showDirectDialog -> val$showDirectDialog
    java.lang.String val$reportFileName -> val$reportFileName
    boolean val$endApplication -> val$endApplication
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ReportField -> org.acra.ReportField:
    org.acra.ReportField REPORT_ID -> REPORT_ID
    org.acra.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    org.acra.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    org.acra.ReportField PACKAGE_NAME -> PACKAGE_NAME
    org.acra.ReportField FILE_PATH -> FILE_PATH
    org.acra.ReportField PHONE_MODEL -> PHONE_MODEL
    org.acra.ReportField ANDROID_VERSION -> ANDROID_VERSION
    org.acra.ReportField BUILD -> BUILD
    org.acra.ReportField BRAND -> BRAND
    org.acra.ReportField PRODUCT -> PRODUCT
    org.acra.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    org.acra.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    org.acra.ReportField CUSTOM_DATA -> CUSTOM_DATA
    org.acra.ReportField STACK_TRACE -> STACK_TRACE
    org.acra.ReportField INITIAL_CONFIGURATION -> INITIAL_CONFIGURATION
    org.acra.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    org.acra.ReportField DISPLAY -> DISPLAY
    org.acra.ReportField USER_COMMENT -> USER_COMMENT
    org.acra.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    org.acra.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    org.acra.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    org.acra.ReportField DROPBOX -> DROPBOX
    org.acra.ReportField LOGCAT -> LOGCAT
    org.acra.ReportField EVENTSLOG -> EVENTSLOG
    org.acra.ReportField RADIOLOG -> RADIOLOG
    org.acra.ReportField IS_SILENT -> IS_SILENT
    org.acra.ReportField DEVICE_ID -> DEVICE_ID
    org.acra.ReportField INSTALLATION_ID -> INSTALLATION_ID
    org.acra.ReportField USER_EMAIL -> USER_EMAIL
    org.acra.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    org.acra.ReportField ENVIRONMENT -> ENVIRONMENT
    org.acra.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    org.acra.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    org.acra.ReportField SHARED_PREFERENCES -> SHARED_PREFERENCES
    org.acra.ReportField APPLICATION_LOG -> APPLICATION_LOG
    org.acra.ReportField MEDIA_CODEC_LIST -> MEDIA_CODEC_LIST
    org.acra.ReportField THREAD_DETAILS -> THREAD_DETAILS
    org.acra.ReportField[] $VALUES -> $VALUES
    org.acra.ReportField[] values() -> values
    org.acra.ReportField valueOf(java.lang.String) -> valueOf
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode DIALOG -> DIALOG
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    org.acra.ReportingInteractionMode[] values() -> values
    org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
org.acra.SendWorker -> org.acra.SendWorker:
    android.content.Context context -> context
    boolean sendOnlySilentReports -> sendOnlySilentReports
    boolean approvePendingReports -> approvePendingReports
    org.acra.CrashReportFileNameParser fileNameParser -> fileNameParser
    java.util.List reportSenders -> reportSenders
    void run() -> run
    void approvePendingReports() -> approvePendingReports
    void checkAndSendReports(android.content.Context,boolean) -> checkAndSendReports
    void sendCrashReport(org.acra.collector.CrashReportData) -> sendCrashReport
    void deleteFile(android.content.Context,java.lang.String) -> deleteFile
org.acra.annotation.ReportsCrashes -> org.acra.annotation.ReportsCrashes:
    java.lang.String formKey() -> formKey
    java.lang.String formUri() -> formUri
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int sharedPreferencesMode() -> sharedPreferencesMode
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    org.acra.ReportField[] customReportContent() -> customReportContent
    java.lang.String mailTo() -> mailTo
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int connectionTimeout() -> connectionTimeout
    int socketTimeout() -> socketTimeout
    int maxNumberOfRequestRetries() -> maxNumberOfRequestRetries
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    java.lang.String googleFormUrlFormat() -> googleFormUrlFormat
    boolean disableSSLCertValidation() -> disableSSLCertValidation
org.acra.collector.Compatibility -> org.acra.collector.Compatibility:
    int getAPILevel() -> getAPILevel
    java.lang.String getDropBoxServiceName() -> getDropBoxServiceName
org.acra.collector.ConfigurationCollector -> org.acra.collector.ConfigurationCollector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    android.util.SparseArray mHardKeyboardHiddenValues -> mHardKeyboardHiddenValues
    android.util.SparseArray mKeyboardValues -> mKeyboardValues
    android.util.SparseArray mKeyboardHiddenValues -> mKeyboardHiddenValues
    android.util.SparseArray mNavigationValues -> mNavigationValues
    android.util.SparseArray mNavigationHiddenValues -> mNavigationHiddenValues
    android.util.SparseArray mOrientationValues -> mOrientationValues
    android.util.SparseArray mScreenLayoutValues -> mScreenLayoutValues
    android.util.SparseArray mTouchScreenValues -> mTouchScreenValues
    android.util.SparseArray mUiModeValues -> mUiModeValues
    java.util.HashMap mValueArrays -> mValueArrays
    java.lang.String toString(android.content.res.Configuration) -> toString
    java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
    java.lang.String collectConfiguration(android.content.Context) -> collectConfiguration
org.acra.collector.CrashReportData -> org.acra.collector.CrashReportData:
    long serialVersionUID -> serialVersionUID
    java.lang.String getProperty(org.acra.ReportField) -> getProperty
org.acra.collector.CrashReportDataFactory -> org.acra.collector.CrashReportDataFactory:
    android.content.Context context -> context
    android.content.SharedPreferences prefs -> prefs
    java.util.List crashReportFields -> crashReportFields
    java.util.Map customParameters -> customParameters
    android.text.format.Time appStartDate -> appStartDate
    java.lang.String initialConfiguration -> initialConfiguration
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    org.acra.collector.CrashReportData createCrashData(java.lang.Throwable,boolean,java.lang.Thread) -> createCrashData
    java.lang.String createCustomInfoString() -> createCustomInfoString
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
org.acra.collector.DeviceFeaturesCollector -> org.acra.collector.DeviceFeaturesCollector:
    java.lang.String getFeatures(android.content.Context) -> getFeatures
org.acra.collector.DropBoxCollector -> org.acra.collector.DropBoxCollector:
    java.lang.String[] SYSTEM_TAGS -> SYSTEM_TAGS
    java.lang.String NO_RESULT -> NO_RESULT
    java.lang.String read(android.content.Context,java.lang.String[]) -> read
org.acra.collector.DumpSysCollector -> org.acra.collector.DumpSysCollector:
    java.lang.String collectMemInfo() -> collectMemInfo
org.acra.collector.LogCatCollector -> org.acra.collector.LogCatCollector:
    int DEFAULT_TAIL_COUNT -> DEFAULT_TAIL_COUNT
    java.lang.String collectLogCat(java.lang.String) -> collectLogCat
org.acra.collector.LogFileCollector -> org.acra.collector.LogFileCollector:
    java.lang.String collectLogFile(android.content.Context,java.lang.String,int) -> collectLogFile
org.acra.collector.MediaCodecListCollector -> org.acra.collector.MediaCodecListCollector:
    java.lang.String COLOR_FORMAT_PREFIX -> COLOR_FORMAT_PREFIX
    java.lang.String[] MPEG4_TYPES -> MPEG4_TYPES
    java.lang.String[] AVC_TYPES -> AVC_TYPES
    java.lang.String[] H263_TYPES -> H263_TYPES
    java.lang.String[] AAC_TYPES -> AAC_TYPES
    java.lang.Class mediaCodecListClass -> mediaCodecListClass
    java.lang.reflect.Method getCodecInfoAtMethod -> getCodecInfoAtMethod
    java.lang.Class mediaCodecInfoClass -> mediaCodecInfoClass
    java.lang.reflect.Method getNameMethod -> getNameMethod
    java.lang.reflect.Method isEncoderMethod -> isEncoderMethod
    java.lang.reflect.Method getSupportedTypesMethod -> getSupportedTypesMethod
    java.lang.reflect.Method getCapabilitiesForTypeMethod -> getCapabilitiesForTypeMethod
    java.lang.Class codecCapabilitiesClass -> codecCapabilitiesClass
    java.lang.reflect.Field colorFormatsField -> colorFormatsField
    java.lang.reflect.Field profileLevelsField -> profileLevelsField
    java.lang.reflect.Field profileField -> profileField
    java.lang.reflect.Field levelField -> levelField
    android.util.SparseArray mColorFormatValues -> mColorFormatValues
    android.util.SparseArray mAVCLevelValues -> mAVCLevelValues
    android.util.SparseArray mAVCProfileValues -> mAVCProfileValues
    android.util.SparseArray mH263LevelValues -> mH263LevelValues
    android.util.SparseArray mH263ProfileValues -> mH263ProfileValues
    android.util.SparseArray mMPEG4LevelValues -> mMPEG4LevelValues
    android.util.SparseArray mMPEG4ProfileValues -> mMPEG4ProfileValues
    android.util.SparseArray mAACProfileValues -> mAACProfileValues
    java.lang.String collecMediaCodecList() -> collecMediaCodecList
    java.lang.String collectCapabilitiesForType(java.lang.Object,java.lang.String) -> collectCapabilitiesForType
    org.acra.collector.MediaCodecListCollector$CodecType identifyCodecType(java.lang.Object) -> identifyCodecType
org.acra.collector.MediaCodecListCollector$1 -> org.acra.collector.MediaCodecListCollector$1:
    int[] $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType -> $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType
org.acra.collector.MediaCodecListCollector$CodecType -> org.acra.collector.MediaCodecListCollector$CodecType:
    org.acra.collector.MediaCodecListCollector$CodecType AVC -> AVC
    org.acra.collector.MediaCodecListCollector$CodecType H263 -> H263
    org.acra.collector.MediaCodecListCollector$CodecType MPEG4 -> MPEG4
    org.acra.collector.MediaCodecListCollector$CodecType AAC -> AAC
    org.acra.collector.MediaCodecListCollector$CodecType[] $VALUES -> $VALUES
    org.acra.collector.MediaCodecListCollector$CodecType[] values() -> values
    org.acra.collector.MediaCodecListCollector$CodecType valueOf(java.lang.String) -> valueOf
org.acra.collector.ReflectionCollector -> org.acra.collector.ReflectionCollector:
    java.lang.String collectConstants(java.lang.Class) -> collectConstants
    java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
org.acra.collector.SettingsCollector -> org.acra.collector.SettingsCollector:
    java.lang.String collectSystemSettings(android.content.Context) -> collectSystemSettings
    java.lang.String collectSecureSettings(android.content.Context) -> collectSecureSettings
    boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
org.acra.collector.SharedPreferencesCollector -> org.acra.collector.SharedPreferencesCollector:
    java.lang.String collect(android.content.Context) -> collect
    boolean filteredKey(java.lang.String) -> filteredKey
org.acra.collector.ThreadCollector -> org.acra.collector.ThreadCollector:
    java.lang.String collect(java.lang.Thread) -> collect
org.acra.log.ACRALog -> org.acra.log.ACRALog:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.AndroidLogDelegate -> org.acra.log.AndroidLogDelegate:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.sender.EmailIntentSender -> org.acra.sender.EmailIntentSender:
    android.content.Context mContext -> mContext
    void send(org.acra.collector.CrashReportData) -> send
    java.lang.String buildBody(org.acra.collector.CrashReportData) -> buildBody
org.acra.sender.GoogleFormSender -> org.acra.sender.GoogleFormSender:
    android.net.Uri mFormUri -> mFormUri
    void send(org.acra.collector.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
org.acra.sender.GoogleFormSender$1 -> org.acra.sender.GoogleFormSender$1:
    int[] $SwitchMap$org$acra$ReportField -> $SwitchMap$org$acra$ReportField
org.acra.sender.HttpPostSender -> org.acra.sender.HttpPostSender:
    android.net.Uri mFormUri -> mFormUri
    java.util.Map mMapping -> mMapping
    void send(org.acra.collector.CrashReportData) -> send
    boolean isNull(java.lang.String) -> isNull
    java.util.Map remap(java.util.Map) -> remap
org.acra.sender.ReportSender -> org.acra.sender.ReportSender:
    void send(org.acra.collector.CrashReportData) -> send
org.acra.sender.ReportSenderException -> org.acra.sender.ReportSenderException:
org.acra.util.BoundedLinkedList -> org.acra.util.BoundedLinkedList:
    int maxSize -> maxSize
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.String toString() -> toString
org.acra.util.FakeSocketFactory -> org.acra.util.FakeSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    javax.net.ssl.SSLContext createEasySSLContext() -> createEasySSLContext
    javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.acra.util.HttpRequest -> org.acra.util.HttpRequest:
    java.lang.String login -> login
    java.lang.String password -> password
    int connectionTimeOut -> connectionTimeOut
    int socketTimeOut -> socketTimeOut
    int maxNrRetries -> maxNrRetries
    void setLogin(java.lang.String) -> setLogin
    void setPassword(java.lang.String) -> setPassword
    void setConnectionTimeOut(int) -> setConnectionTimeOut
    void setSocketTimeOut(int) -> setSocketTimeOut
    void setMaxNrRetries(int) -> setMaxNrRetries
    void sendPost(java.net.URL,java.util.Map) -> sendPost
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.auth.UsernamePasswordCredentials getCredentials() -> getCredentials
    org.apache.http.client.methods.HttpPost getHttpPost(java.net.URL,java.util.Map) -> getHttpPost
    java.lang.String getParamsAsString(java.util.Map) -> getParamsAsString
org.acra.util.HttpRequest$1 -> org.acra.util.HttpRequest$1:
org.acra.util.HttpRequest$SocketTimeOutRetryHandler -> org.acra.util.HttpRequest$SocketTimeOutRetryHandler:
    org.apache.http.params.HttpParams httpParams -> httpParams
    int maxNrRetries -> maxNrRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.acra.util.Installation -> org.acra.util.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String id(android.content.Context) -> id
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File) -> writeInstallationFile
org.acra.util.NaiveTrustManager -> org.acra.util.NaiveTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.acra.util.PackageManagerWrapper -> org.acra.util.PackageManagerWrapper:
    android.content.Context context -> context
    boolean hasPermission(java.lang.String) -> hasPermission
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
org.acra.util.ReportUtils -> org.acra.util.ReportUtils:
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    java.lang.String getDisplayDetails(android.content.Context) -> getDisplayDetails
    java.lang.String sparseArrayToString(android.util.SparseArray) -> sparseArrayToString
org.acra.util.ToastSender -> org.acra.util.ToastSender:
    void sendToast(android.content.Context,int,int) -> sendToast
org.apache.commons.io.IOUtils -> org.a.a.a.a:
    char DIR_SEPARATOR -> a
    java.lang.String LINE_SEPARATOR -> b
    java.lang.String toString(java.io.InputStream) -> a
    void copy(java.io.InputStream,java.io.Writer) -> a
    int copy(java.io.Reader,java.io.Writer) -> a
    long copyLarge(java.io.Reader,java.io.Writer) -> b
org.apache.commons.io.output.StringBuilderWriter -> org.a.a.a.a.a:
    java.lang.StringBuilder builder -> a
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(java.lang.String) -> write
    void write(char[],int,int) -> write
    java.lang.String toString() -> toString
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
