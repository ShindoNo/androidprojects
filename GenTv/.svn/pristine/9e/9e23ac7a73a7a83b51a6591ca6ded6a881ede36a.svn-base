package gen.entertainments.gentv;

import gen.entertainments.gentv.dataservices.CategoriesChannelService;
import gen.entertainments.gentv.dataservices.ServiceHelper;
import gen.entertainments.gentv.utils.NameSpace;
import org.json.JSONArray;
import org.json.JSONObject;
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.LinearLayout;
import android.widget.TextView;

public class FragmentMenu extends Fragment {
	Activity mActivity;
	View mainLayout;
	View currentSelected;
	
	LayoutInflater mInflater;
	OnMenuCategorySelection mOnMenuCategorySelection;
	
	public static FragmentMenu getInstance(OnMenuCategorySelection onMenuCategorySelection) {
		FragmentMenu fragmentMenu = new FragmentMenu();
		fragmentMenu.setData(onMenuCategorySelection);
		return fragmentMenu;
	}
	
	public void setData(OnMenuCategorySelection onMenuCategorySelection) {
		mOnMenuCategorySelection = onMenuCategorySelection;
	}
	
	@Override
	public void onAttach(Activity activity) {
		// TODO Auto-generated method stub
		super.onAttach(activity);
		mActivity = activity;
		mInflater = LayoutInflater.from(mActivity);
	}
	
	public void setActivity(Activity activity) {
		mActivity = activity;
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		mainLayout = inflater.inflate(R.layout.fragment_menu, container, false);
		return mainLayout;
	}
	
	@Override
	public void onViewCreated(View view, Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onViewCreated(view, savedInstanceState);
		initUI();
		buildPersonalUI();
		buildSettingsUI();
	}
	
	private void initUI() {
		SharedPreferences sharedPreferences = mActivity.getSharedPreferences(NameSpace.SHARED_PREF_NAME, Context.MODE_PRIVATE);
		String categoryData = sharedPreferences.getString(NameSpace.SHARED_PREF_CATEGORY_DATA, "");
		if (!categoryData.equals("")) {
			try {
				JSONArray categoryDataJSON = new JSONArray(categoryData);
				buildCategoriesChannelUI(categoryDataJSON);
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		} else {
			new Thread(new Runnable() {
				@Override
				public void run() {
					// TODO Auto-generated method stub
					String apiUrl = String.format(NameSpace.API_CATEGORY);
					final JSONArray categoryDataJSON = (JSONArray) ServiceHelper.getData(apiUrl, false);
					mActivity.runOnUiThread(new Runnable() {
						@Override
						public void run() {
							// TODO Auto-generated method stub
							buildCategoriesChannelUI(categoryDataJSON);		
						}
					});
				}
			}).start();
		}
	}
	
	private void buildPersonalUI() {
		LinearLayout sectionPersnalInfo = (LinearLayout) mainLayout.findViewById(R.id.section_personal_info);
		TextView tvTitle = (TextView) sectionPersnalInfo.findViewById(R.id.tv_section_title);
		tvTitle.setText(mActivity.getString(R.string.section_title_personal_info));
		tvTitle.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_person, 0, 0, 0);
		
		View rowSectionFavouriteChannels = mInflater.inflate(R.layout.row_section, null);
		sectionPersnalInfo.addView(rowSectionFavouriteChannels);
		TextView tvFavouriteChannels = (TextView) rowSectionFavouriteChannels.findViewById(R.id.tv_section_row);
		tvFavouriteChannels.setText(mActivity.getString(R.string.favourite_channels));
		tvFavouriteChannels.setTag(R.id.tag_id, NameSpace.CATID_FAVOURITE_CHANNEL);
		tvFavouriteChannels.setOnClickListener(mOnClickCategoryListener);
	}
	
	private void buildCategoriesChannelUI(JSONArray categoriesData) {
		LinearLayout sectionCategories = (LinearLayout) mainLayout.findViewById(R.id.section_categories_channel);
		
		TextView tvTitle = (TextView) sectionCategories.findViewById(R.id.tv_section_title);
		tvTitle.setText(mActivity.getString(R.string.section_title_channel));
		tvTitle.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_channel_header, 0, 0, 0);
		
		try {
			for (int i = 0; i < categoriesData.length(); i++) {
				JSONObject categoryData = categoriesData.getJSONObject(i);
				View categoryLayout = mInflater.inflate(R.layout.row_section, null);
				sectionCategories.addView(categoryLayout);
				
				String count = categoryData.getString(CategoriesChannelService.count);
				TextView tvSectionRow = (TextView) categoryLayout.findViewById(R.id.tv_section_row);
				tvSectionRow.setText(categoryData.getString(CategoriesChannelService.catname) + " (" + (count) + ")");
				tvSectionRow.setTag(R.id.tag_id, categoryData.getString(CategoriesChannelService.catid));
				tvSectionRow.setOnClickListener(mOnClickCategoryListener);
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}
	
	private void buildSettingsUI() {
		LinearLayout sectionSettings = (LinearLayout) mainLayout.findViewById(R.id.section_settings);
		TextView tvTitle = (TextView) sectionSettings.findViewById(R.id.tv_section_title);
		tvTitle.setText(getString(R.string.section_title_settings));
		tvTitle.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_setting_white, 0, 0, 0);
		
		View rowSectionContactUs = mInflater.inflate(R.layout.row_section, null);
		sectionSettings.addView(rowSectionContactUs);
		TextView tvAbout = (TextView) rowSectionContactUs.findViewById(R.id.tv_section_row);
		tvAbout.setText(getString(R.string.about));
		tvAbout.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_contact, 0, 0, 0);
		
		tvAbout.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				showAboutDialog();
			}
		});
	}
	
	private void showAboutDialog() {
		final Dialog dialog = new Dialog(mActivity);
		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		dialog.getWindow().getAttributes().windowAnimations = R.style.NotifyDialogAnimation;
		dialog.setContentView(R.layout.dialog_about);
		
		try {
			PackageInfo packageInfo = mActivity.getPackageManager().getPackageInfo(mActivity.getPackageName(), 0);
			String version = packageInfo.versionName;
			((TextView)dialog.findViewById(R.id.tv_version)).setText(getString(R.string.version) + " " + version);
		} catch (NameNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
		
		dialog.findViewById(R.id.btn_ok).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				dialog.dismiss();
			}
		});
		
		dialog.show();
	}
	
	
	OnClickListener mOnClickCategoryListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			if (currentSelected != null) currentSelected.setBackgroundColor(0);
			currentSelected = v;
			currentSelected.setBackgroundResource(R.drawable.bg_section_row);
			
			String catId = v.getTag(R.id.tag_id).toString();
			mOnMenuCategorySelection.onSelect(catId);
		}
	};
	
	interface OnMenuCategorySelection {
		public void onSelect(String catId);
	}
	
	interface OnMenuFavouriteChannelSelection {
		public void onSelect(String channelId);
	}
}
