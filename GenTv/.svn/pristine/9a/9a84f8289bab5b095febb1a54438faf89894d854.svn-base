package gen.entertainments.gentv.database;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

public class DatabaseDAO {
	
	DatabaseHelper mDatabaseHelper;
	SQLiteDatabase mSqLiteDatabase;
	
	public DatabaseDAO(Context context) {
		// TODO Auto-generated constructor stub
		mDatabaseHelper = new DatabaseHelper(context);
	}
	
	public void open() {
		mSqLiteDatabase = mDatabaseHelper.getWritableDatabase();
	}
	
	public void close() {
		mDatabaseHelper.close();
	}
	
	/** ---------- Favourite Albums ---------- */
	/** ---------- Favourite Albums ---------- */
	/** ---------- Favourite Albums ---------- */
//	public boolean checkAlbumExist(String albumId) {
//		Cursor cursor = mSqLiteDatabase.query(DatabaseHelper.TB_FAVOURITE_ALBUMS, null, DatabaseHelper.CL_FAVOURITE_ALBUM_ID + "='" + albumId + "'",
//											null, null, null, null);
//		boolean exist;
//		if (cursor.getCount() == 1)
//			exist = true;
//		else
//			exist = false;
//		
//		cursor.close();
//		return exist;
//	}
	
//	public void insertAlbum(String albumId, String albumName) {
//		ContentValues contentValues = new ContentValues();
//		contentValues.put(DatabaseHelper.CL_FAVOURITE_ALBUM_ID, albumId);
//		contentValues.put(DatabaseHelper.CL_FAVOURITE_ALBUM_NAME, albumName);
//		mSqLiteDatabase.insert(DatabaseHelper.TB_FAVOURITE_ALBUMS, null, contentValues);
//	}
//	
//	public void removeAlbum(String albumId) {
//		mSqLiteDatabase.delete(DatabaseHelper.TB_FAVOURITE_ALBUMS, DatabaseHelper.CL_FAVOURITE_ALBUM_ID + "='" + albumId + "'", null);
//	}
//	
//	public String[][] getFavouriteAlbums() {
//		Cursor cursor = mSqLiteDatabase.query(DatabaseHelper.TB_FAVOURITE_ALBUMS, new String[] {DatabaseHelper.CL_FAVOURITE_ALBUM_ID, DatabaseHelper.CL_FAVOURITE_ALBUM_NAME},
//											  null, null, null, null, null);
//		if (cursor.getCount() == 0) {
//			cursor.close();
//			return new String[0][0];
//		} else {
//			String[][] result = new String[cursor.getCount()][2];
//			for (int i = 0; i < cursor.getCount(); i++) {
//				cursor.moveToPosition(i);
//				result[i][0] = cursor.getString(0);
//				result[i][1] = cursor.getString(1);
//			}
//			cursor.close();
//			return result;
//		}
//	}

}
