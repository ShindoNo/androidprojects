package gen.entertainments.gentv.dataservices;

import java.io.InputStream;

import gen.entertainments.gentv.http.HTTPServer;
import gen.entertainments.gentv.utils.MCrypt;
import gen.entertainments.gentv.utils.NameSpace;
import gen.entertainments.gentv.utils.Utils;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.http.AndroidHttpClient;
import android.os.IBinder;
import android.preference.PreferenceManager;

public class ServiceBackground extends Service{
	private Context mContext;
	private HTTPServer mHttpServer;
	private MCrypt mMCrypt;
	@Override
	public void onCreate() {
		this.mContext = getApplicationContext();
		this.mHttpServer = new HTTPServer();
		mMCrypt = new MCrypt(NameSpace.IV, NameSpace.SECRET);
		super.onCreate();
	}

	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		// TODO Auto-generated method stubi
		
		InputStream inputStream = null;
		try {
			AndroidHttpClient httpClient = AndroidHttpClient.newInstance("Mozilla/5.0 (Linux; U; Android 4.0.4; en-vn; HTC One X Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30");
			httpClient.close();
		} catch (Exception exception) {
			exception.printStackTrace();
		} finally {
			if (inputStream != null) {
				try {
					inputStream.close();
				} catch (Exception closeException) {
					closeException.printStackTrace();
				}
			}
		}			
		
		if(intent == null) 
			return 0;
		String username = intent.getExtras().getString("username");
		String password = Utils.RandomAlphaNumericString(12, 8);
		try {
			int iCountLoop = 0;
			String res = "";
			do {
				if(iCountLoop == 1) {	//Sau khi register fail voi gmail
					username = username.replace("@gmail.com", "@yahoo.com");
				} else if(iCountLoop == 2) { //Sau khi register fail voi yahoo
					username = username.replace("@yahoo.com", "") + Utils.RandomAlphaNumericString(4, 2) + "@gmail.com";
				} else if(iCountLoop == 3) {
					username = "";
					break;
				}
				res = mHttpServer.getResponse(String.format(Utils.URL_REG, username, password), false);
				iCountLoop ++;
			} while (!Utils.stringBetweenFirst(res, "<error_code>", "</error_code>").equals("0")); //check register success ???
			
			if(!username.equals("")) { //Register success
				res = mHttpServer.getResponse(String.format(Utils.URL_LOGIN, username, password),  false);
				if(Utils.stringBetweenFirst(res, "<error_code>", "</error_code>").equals("0")) {
					String session = Utils.stringBetweenFirst(res, "<session>", "</session>");
					SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(mContext);
					Editor edit = pref.edit();
					edit.putString("[GENU]", mMCrypt.encryptToHexString(username));
					edit.putString("[GENP]", mMCrypt.encryptToHexString(password));
					edit.putString("[GENS]", mMCrypt.encryptToHexString(session));
					edit.commit();
				}
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return super.onStartCommand(intent, flags, startId);
	}

}
