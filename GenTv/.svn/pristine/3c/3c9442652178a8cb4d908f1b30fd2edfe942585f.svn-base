package gen.entertainments.gentv;

import org.json.JSONArray;

import com.slidingmenu.lib.SlidingMenu;
import gen.entertainments.gentv.FragmentMenu.OnMenuCategorySelection;
import gen.entertainments.gentv.FragmentListChannels.OnPlayChannel;
import gen.entertainments.gentv.imageloader.ImageLoader;
import gen.entertainments.gentv.utils.NameSpace;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.inputmethod.InputMethodManager;


public class MainActivity extends FragmentActivity {
	FragmentManager mFragmentManager;
	FragmentMenu mFragmentMenu;
	FragmentListChannels mFragmentListChannels;
	FragmentPlay mFragmentPlay;
	
	SlidingMenu mSlidingMenu;
	ImageLoader mImageLoader;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		initUI();
	}
	
	private void initUI() {
		mImageLoader = new ImageLoader(MainActivity.this, "GenTV", 5);
		mSlidingMenu = (SlidingMenu) findViewById(R.id.sliding_menu);
		initTopButtons();
		initFragment();
	}
	
	private void initTopButtons() {
		findViewById(R.id.img_search).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				findViewById(R.id.view_top_buttons).setVisibility(View.GONE);
				findViewById(R.id.view_search).setVisibility(View.VISIBLE);
				((InputMethodManager)getSystemService(INPUT_METHOD_SERVICE)).toggleSoftInput(0, 0);
			}
		});
	}
	
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// TODO Auto-generated method stub
		if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_DOWN && findViewById(R.id.view_search).getVisibility() == View.VISIBLE) {
			findViewById(R.id.view_top_buttons).setVisibility(View.VISIBLE);
			findViewById(R.id.view_search).setVisibility(View.GONE);
			return true;
		}
		
		return super.onKeyDown(keyCode, event);
	}
	
	private void initFragment() {
		mFragmentManager = getSupportFragmentManager();
		mFragmentMenu = FragmentMenu.getInstance(mOnMenuCategorySelection);
		mFragmentManager.beginTransaction().add(R.id.fragment_menu_container, mFragmentMenu).commit();
		
		String lastCatId = getSharedPreferences(NameSpace.SHARED_PREF_CONFIG, Context.MODE_PRIVATE)
				 		  .getString(NameSpace.SHARED_PREF_LAST_CAT_ID, NameSpace.DEFAULT_CATEGORY_ID);
		
		mFragmentListChannels = FragmentListChannels.getIntance(mImageLoader, lastCatId, mOnPlayChannel);
		mFragmentManager.beginTransaction().add(R.id.fragment_main_container, mFragmentListChannels).commit();
		
		mFragmentPlay = FragmentPlay.getIntance(mImageLoader);
		mFragmentManager.beginTransaction().add(R.id.fragment_main_container, mFragmentPlay).commit();
		
		mFragmentManager.beginTransaction().show(mFragmentListChannels).hide(mFragmentPlay).commit();
	}
	
	OnPlayChannel mOnPlayChannel = new OnPlayChannel() {
		@Override
		public void playChannel(JSONArray listChannels, int position) {
			// TODO Auto-generated method stub
	    	mFragmentManager.beginTransaction()
			.setCustomAnimations(R.anim.right_to_left_in, R.anim.right_to_left_out,R.anim.left_to_right_in, R.anim.left_to_right_out)
			.hide(mFragmentListChannels)
  			.show(mFragmentPlay)
  			.addToBackStack(null)
  			.commit();				
			
			mFragmentPlay.playChannel(listChannels, position);
		}
	};
	
	OnMenuCategorySelection mOnMenuCategorySelection = new OnMenuCategorySelection() {
		@Override
		public void onSelect(String catId) {
			// TODO Auto-generated method stub
			mSlidingMenu.showAbove();
			mFragmentListChannels.onSelectCatId(catId);
		}
	};
}
